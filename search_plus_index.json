{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 介绍sdk的接入过程。 "},"cn/":{"url":"cn/","title":"中文","keywords":"","body":"中文 介绍核心业务的接入和接口使用。支持Android、iOS、Unity小游戏接入。 "},"cn/ke-hu-duan-jie-ru/":{"url":"cn/ke-hu-duan-jie-ru/","title":"客户端接入","keywords":"","body":"客户端接入 介绍Android和iOS平台的SDK接入方法，同时也针对Unity引擎做了适配接口。 "},"cn/ke-hu-duan-jie-ru/dui-jie-liu-cheng.html":{"url":"cn/ke-hu-duan-jie-ru/dui-jie-liu-cheng.html","title":"对接流程","keywords":"","body":"对接流程 Android对接流程 1. 接入sdk 参考《Android接入流程》接入SDK。参考《业务接口》调用代码。常规必接的包括广告、退出、统计，计费和其他功能根据产品需求选择接入。 2. 打测试包 按照Demo中的包名和产品参数进行设置，即可测试广告、计费等功能。可通过Tag为ADLog的日志查看广告加载和显示情况。 3. 验收 将测试包提供给我们验收。我们会确认广告埋点和道具下发是否正常，必接项是否接入，游戏功能是否完整。 4. 提供AS工程 发送AndroidStudio打包工程给我们的技术跟进人。后续内容更新也需要同步给技术跟进人。 iOS对接流程 1. 接入sdk 参考《iOS接入流程》接入SDK。参考《业务接口》调用代码。常规必接的包括广告、统计功能，计费和其他功能根据产品需求选择接入。 2. 打测试包 首次接入需要按照我们提供的包名、证书、项目ID进行配置，即可测试广告、计费等功能。测试的包名和证书可联系技术人员获取。 3. 验收 将ipa提供给我们验收。我们会确认广告埋点和道具下发是否正常，必接项是否接入，游戏功能是否完整。 4. 打正式包 分两种情况： A.使用CP自己的账号提包： 按照我们提供的正式产品参数进行打包 发送ipa文件给我们确认参数 自行打包上传 B.使用动能的账号提包： 按照我们提供的正式产品参数、包名、证书进行打包后 提供ipa文件给我们。 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/","title":"Android","keywords":"","body":"Android Demo工程git克隆地址： git clone http://dnsdk.vimedia.cn:8080/r/VigameDemo-Android.git 第一步：添加maven仓库地址 buildscript { repositories { google() jcenter() //添加 动能maven仓库 版本检测插件 maven { url \"http://dnsdk.vimedia.cn:8081/repository/vigame-public/\" } //添加友盟仓库 maven { url 'https://dl.bintray.com/umsdk/release' } } dependencies { //添加 动能 版本检测插件 classpath 'com.wb.check:plugin:1.0.3' } } allprojects { repositories { google() jcenter() //动能maven仓库 maven { url \"http://dnsdk.vimedia.cn:8081/repository/vigame-public/\" } //添加友盟仓库 maven { url 'https://dl.bintray.com/umsdk/release' } } } 根目录下gradle.properties文件中添加： #魅族注释掉下面这句，其他的需要打开 android.enableJetifier=true android.useAndroidX=true android.injected.testOnly=false 第二步：引用插件 //添加插件引用 apply plugin: 'Wb-check' def WB = getPlugins().findPlugin('Wb-check') 第三步：引入仓库中的模块 //vigame相关模块 implementation WB.fixVersions('Proxy:Features_new') implementation WB.fixVersions('Loader:VigameLoader') implementation WB.fixVersions('Core:CoreManager') implementation WB.fixVersions('Pay:PayManager') implementation WB.fixVersions('AD3:ADManager') implementation WB.fixVersions('TJ:TJManager') implementation WB.fixVersions('Social:SocialManager') implementation WB.fixVersions('Extention:ExtManager') //用到的第三方库 implementation WB.fixVersions('Core:android-query') implementation 'androidx.multidex:multidex:2.0.1' implementation 'androidx.legacy:legacy-support-v4:1.0.0' implementation 'androidx.appcompat:appcompat:1.1.0' implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.6' 第四步：添加动能的混淆过滤文件 buildTypes { release { minifyEnabled true shrinkResources false // 此处添加 'vigame_proguard.pro' 过滤sdk的混淆 proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'vigame_proguard.pro' signingConfig signingConfigs.release zipAlignEnabled true } } 如果release版本不开启混淆，可跳过 第五步：添加框架代码调用 1.修改应用的Application类。 在MyApplication类对应生命周期中加入模块的调用代码： public class MyApplication extends Application { @Override public void onCreate() { super.onCreate(); VigameLoader.applicationOnCreate(this); } @Override protected void attachBaseContext(Context base) { super.attachBaseContext(base); VigameLoader.applicationAttachBaseContext(this, base); } } 或者 直接将MyApplication类继承VigameApplication： public class MyApplication extends VigameApplication { } 2.修改主Activity Unity游戏可跳过该步骤，将主Acitivity改为UniWbActivity或其子类即可。 在对应生命周期中加入VigameLoader模块的调用代码： @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); VigameLoader.activityOnCreate(this); //模块初始化 CoreNative.init(); } @Override protected void onResume() { super.onResume(); VigameLoader.activityOnResume(this); } @Override protected void onPause() { super.onPause(); VigameLoader.activityOnPause(this); } @Override protected void onDestroy() { super.onDestroy(); VigameLoader.activityOnDestroy(this); } @Override public void onWindowFocusChanged(boolean hasFocus) { super.onWindowFocusChanged(hasFocus); VigameLoader.activityOnWindowFocusChanged(this,hasFocus); } @Override protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) { super.onActivityResult(requestCode, resultCode, data); VigameLoader.activityOnActivityResult(this,requestCode,resultCode,data); } @Override protected void onRestart() { super.onRestart(); VigameLoader.activityOnRestart(this); } 第六步：修改Manifest文件 添加相关的参数配置，并将VigameStartActivity设置为启动的Activit，application标签的android:name 设置为com.libVigame.VigameApplication 或 xxx.xx.x.MyApplication 第七步：放入配置文件并修改 拷贝VigameConfig.xml和agrement.html到assets目录 通过assets文件夹中的ConfigVigame.xml进行配置，注意必须属性一定要设置，属性说明如下： 名称 解释 是否必须 GameOpenActivity 闪屏后进入的Activity路径名称 是 ScreenOrientation 屏幕方向 是 IsSDK 填true，请勿修改该标签 是 CompanyIndex 公司名称ID，默认填1 是 SupportAdPositions 支持的广告位名称 否 WithSplashAD 是否出现闪屏广告（默认出现） 否 Debug true或false(Vigamelog 是否输出的标志) 否 NoSplash 不显示开屏时设置为true,默认不设置 否 AutoFullScreen 是否把当前activity设置为全屏，默认为true 否 FixSpecialScreen 是否适配刘海屏，默认为true 否 SplashTime 闪屏持续时长，整数（单位毫秒） 否 DelaySplashAD 闪屏持续多长时间后打开开屏广告,默认为0 否 第八步：配置测试相关项 1.修改app/build.gradle文件，修改包名、渠道名、umeng参数 建议使用如下示例的包名，以方便广告展示 defaultConfig { applicationId \"com.dn.tgxm.gg\" ... manifestPlaceholders = [ UMENG_APPKEY : \"\", WB_CHANNEL : \"gg\" ] } 2.修改开屏广告的背景 开屏广告默认内置一张白色背景，如需修改改背景文件，请将要替换的背景图放在res/drawable/目录并重命名为bg_splash_vigame.png。 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/","title":"模块扩展","keywords":"","body":"模块扩展 介绍市面上常见的SDK如何对接到聚合框架，不必每个都接入，按需使用即可。 合作方建议跳过这部分 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/","title":"广告接入参考","keywords":"","body":"广告接入参考 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/tuia.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/tuia.html","title":"推啊","keywords":"","body":"推啊 模块引入 allprojects { repositories { maven { url 'https://dl.bintray.com/sunjiangrong/maven' } maven { url 'https://jitpack.io' } } } implementation WB.fixVersions('AD:TuiA'） 注意事项 无 混淆过滤 -dontwarn com.tuia.** -keep class com.tuia.** { *; } 集成测试 如何判断sdk是否初始化成功？ 通过TuiAAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/kuang-re-guang-gao.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/kuang-re-guang-gao.html","title":"狂热广告","keywords":"","body":"狂热广告 模块引入 1.采用本地导入的方式，将libAD_UpAds当做一个module引入你的工程当中 2.在app的build.gardle的dependencies前加入如下代码： repositories { flatDir { dirs 'libs' dirs project(':libAD_UpAds').file('libs') } } 3.在app的build.gardle的dependencies中加入以下代码 implementation project(':libAD_UpAds') fileTree(dir: 'libs', include: ['*.aar']).each { file -> api(name: file.name.lastIndexOf('.').with { it != -1 ? file.name[0.. 注意事项 1.当打包结束的时候，建议把build.gradle中加入的代码注释掉， 以免接其他渠道的时候还带了狂热聚合广告的代码。 2.当接入狂热广告的时候不建议再接入我们的其他家广告，因为狂热广告是一个聚合广告， 有可能带来广告的版本冲突和收益不知道算哪边的问题。 混淆过滤 # avidly -keep class com.avidly.ads.** {*;} -keep class com.up.ads.** {*;} -keep interface com.up.ads.** {*;} -keep class com.avidly.channel.** { *; } -keep class com.up.channel.** { *; } -keep class com.sm.avid.decode.** {*;} -keep class com.avidly.playablead.ext.** {*;} -keep interface com.avidly.ads.** {*;} -keep interface com.sm.avid.decode.** {*;} -keep class com.hola.sdk.* {*;} -keep class com.statistics.channel.* {*;} -keep class com.aly.analysis.sdk.api.* {*;} -keepclasseswithmembernames class * { native ; } -dontwarn com.avidly.** -dontwarn com.up.** -keep class com.statistics.channel.* {*;} # avidly end # support -keep public class * extends android.support.v4.app.Fragment -keep class android.support.** {*;} -keep class com.google.gson.** {*;} -dontwarn android.support.** # support end # facebook -keep class com.facebook.ads.InterstitialAd {*;} -keep class com.facebook.ads.AdView {*;} -keep class com.facebook.ads.Ad {*;} -keep class com.facebook.ads.RewardedVideoAd {*;} -keep class com.facebook.ads.AdListener {*;} -keep class com.facebook.ads.BuildConfig {*;} -dontwarn com.facebook.ads.internal.** -keep class com.facebook.bidding.** {*;} -keep class com.google.android.exoplayer2.** {*;} -dontwarn com.google.android.exoplayer2.** # facebook end # google -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable { public static final *** NULL; } -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keepnames @com.google.android.gms.common.annotation.KeepName class * -keepclassmembernames class * { @com.google.android.gms.common.annotation.KeepName *; } -keepnames class * implements android.os.Parcelable { public static final ** CREATOR; } -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep class com.google.android.gms.ads.** {*;} -keep class com.google.android.gms.common.** {*;} -dontwarn com.google.android.gms.** -dontwarn com.google.protobuf.** -keep class com.google.ads.mediation.** {*;} -dontwarn com.google.ads.mediation.** # google end # adcolony -keep class com.adcolony.** { *; } -dontwarn com.adcolony.** -dontnote com.adcolony.** # adcolony end # vungle -keep class com.vungle.warren.** { *; } -keep class com.moat.** { *; } -keep class com.google.android.gms.internal.** { *; } -dontwarn com.vungle.warren.error.VungleError$ErrorCode -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement -dontwarn retrofit2.Platform$Java8 -keepattributes Signature -keepattributes *Annotation* -dontwarn sun.misc.** -dontwarn com.vungle.warren.** -dontwarn okio.** -dontwarn retrofit2.** -dontwarn com.moat.** -dontwarn com.google.android.gms.ads.identifier.** -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement -keeppackagenames 'net.vrallev.android.cat' -keeppackagenames 'retrofit2.converter.gson' -keeppackagenames 'com.tonyodev.fetch' -keeppackagenames 'okhttp3.logging' -keeppackagenames 'okhttp3' -keeppackagenames 'okio' -keeppackagenames 'retrofit2' # vungle end # unity -keepattributes SourceFile,LineNumberTable -keepattributes JavascriptInterface -keep class android.webkit.JavascriptInterface {*;} -keep class com.unity3d.ads.** {*;} -keep class com.unity3d.services.** {*;} -dontwarn com.google.ar.core.** # unity end # applovin -keep class com.applovin.** { *; } -dontwarn com.applovin.** # applovin end # chartboost -keep class com.chartboost.** { *; } -dontwarn com.chartboost.** # chartboost end # playable -keep class com.avidly.playablead.app.** { *; } # playable end # ironsource -keep class com.ironsource.mediationsdk.IronSource -keep class com.moat.** { *; } -keepclassmembers class com.ironsource.sdk.controller.IronSourceWebView$JSInterface { public *; } -keepclassmembers class * implements android.os.Parcelable { public static final android.os.Parcelable$Creator *; } -keep public class com.google.android.gms.ads.** { public *; } -keep public class com.google.ads.** { public *; } -keep class com.ironsource.adapters.** { *; } # ironsource end # vk -keep class com.my.target.** {*;} -dontwarn com.my.target.** -dontwarn com.mopub.** # vk end # maio -keep class jp.maio.sdk.android.** { *; } -dontwarn jp.maio.sdk.android.** -dontnote jp.maio.sdk.android.** # maio end # nend -keep class net.nend.android.** { *; } -dontwarn net.nend.android.** -dontnote net.nend.android.** # nend end # oneway -keepattributes *Annotation* -keep enum mobi.oneway.sdk.* {*;} -keep class mobi.oneway.sdk.** {*;} # oneway end # gdt -keep class com.qq.e.** {*;} -keep class android.support.v4.** {public *;} -keep class android.support.v7.** {public *;} # gdt end # toutiao -keep class com.bytedance.sdk.openadsdk.** { *; } -keep class com.androidquery.callback.** {*;} -dontwarn com.bytedance.sdk.** -dontwarn com.androidquery.** -dontwarn com.ss.android.** # toutiao end # amazon -keep class com.amazon.device.ads.** { *; } # amazon end 集成测试 如何判断sdk是否初始化成功？ 通过UpADSAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/mei-zu.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/mei-zu.html","title":"魅族","keywords":"","body":"魅族 模块引入 implementation WB.fixVersions('AD:Meizu') 注意事项 无 混淆过滤 -keep class com.meizu.advertise.api.** {*;} -keep class com.meizu.advertise.plugin.api.Mzsdk {*;} -keep class com.meizu.advertise.plugin.api.Mzsdk$* {*;} -keep class com.meizu.advertise.config.** {*;} -keep class com.android.volley.** {*;} -keep class com.google.protobuf.** {*;} -dontwarn com.google.protobuf.** 集成测试 如何判断sdk是否初始化成功？ 通过MeizuAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/applovin.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/applovin.html","title":"Applovin","keywords":"","body":"Applovin 模块引入 implementation WB.fixVersions('AD:AppLovin') 注意事项 混淆过滤 -keep class com.applovin.** -keep class com.applovin.** {*; } 集成测试 如何判断sdk是否初始化成功？ 通过AppLovinAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 广告集成 2.1.6版本，2019年8月20号，视频广告只能播放完一个再加载另外一个，不然会黑屏。 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/shen-qi-guang-gao.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/shen-qi-guang-gao.html","title":"神奇广告","keywords":"","body":"神奇广告 模块引入 implementation WB.fixVersions('AD:Shenqi') 注意事项 无 混淆过滤 -keep class com.qq.e.** {public protected *;} -keep class android.support.v4.**{public *;} -keep class android.support.v7.**{public *;} -keep class com.ak.** {*;} -keep class com.bytedance.sdk.openadsdk.** { *; } -keep class com.androidquery.callback.** {*;} -keep class com.shenqi.sqsdk.**{*;} -keep class com.shenqi.sdk.ex.**{*;} -keep class com.shenqi.listener.**{*;} #如果您使用的是 X5 内核加强版 SDK，还需要在混淆配置文件中加入下面的代码。 -keep class MTT.ThirdAppInfoNew { *; } -keep class com.tencent.** { *; } 集成测试 如何判断sdk是否初始化成功？ 通过Shenqi或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/guang-dian-tong.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/guang-dian-tong.html","title":"广点通","keywords":"","body":"广点通 模块引入 implementation WB.fixVersions('AD:GDTUnion'） (带MobVisita用） 和 implementation WB.fixVersions('AD2:GDTUnion') （不带MobVisita用） 和 implementation WB.fixVersions('AD:GDTUnionA') (广告隐藏) 注意事项 无 混淆过滤 -keep class com.qq.e.** {public protected *;} -keep class android.support.v4.**{public *;} -keep class android.support.v7.**{public *;} # 最新广告隐藏 -keep class com.gg.wb.game.** { public protected *; } -keep class rr.f.beo.** {*; } -dontwarn com.rr.f.beo.** # 如果您使用的是 X5 内核加强版 SDK，还需要在混淆配置文件中加入下面的代码 -keep class MTT.ThirdAppInfoNew {*;} -keep class com.tencent.** { *;} 集成测试 如何判断sdk是否初始化成功？ 通过GDT或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/tou-tiao.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/tou-tiao.html","title":"头条","keywords":"","body":"头条 模块引入 implementation WB.fixVersions('AD:Headline') 和 implementation WB.fixVersions('AD:HeadlineA')（最新广告隐藏方式） 混淆过滤 #穿山甲(今日头条) ###Toutiao v1.9.3.2 -keep class com.bytedance.sdk.openadsdk.** { *; } -keep class com.androidquery.callback.** {*;} -keep class com.ss.android.**{*;} -keep class com.bytedance.sdk.openadsdk.service.TTDownloadProvider #最新广告隐藏方式 -keep class com.bdtt.sdk.wmsdk.** { *; } -keep class com.androidquery.callback.** {*;} -keep class com.bdtt.sdk.wmsdk.service.TTDownloadProvider 集成测试 如何查看广告日志？ 可通过名为\"HeadlineAgent\"的Tag查看日志。 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/xinyi.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/xinyi.html","title":"新义","keywords":"","body":"新义 模块引入 implementation WB.fixVersions('AD:XinYi') 集成测试 通过XinYiAgent或者ADLog过滤日志查看 其他问题 可参考文档 https://github.com/adtalos/android-ads-sdk-demo/wiki "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/bai-du.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/bai-du.html","title":"百度","keywords":"","body":"百度 模块引入 implementation WB.fixVersions('AD:BaiduMob'） (带MobVisita用） 和 implementation WB.fixVersions('AD2:BaiduMob') （不带MobVisita用） 注意事项 普通插屏广告有卡死可能，因此发布临时版本 混淆过滤 -keepclassmembers class * extends android.app.Activity{ public void *(android.view.View); } -keepclassmembers enum *{public static **[] values(); public static ** valueOf(java.lang.String); } -keep class com.baidu.mobads.*.** { *; } 集成测试 如何判断sdk是否初始化成功？ 通过Baidu或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 广告更新 2.4.0版本，2019年8月9号，1.banner修改为icon加载成功再展示；2.原生插屏加黄色边框，并在展示之前完成渲染；3.普通插屏有时候存在没有回调的问题，在load之后6秒内如果没有回调，那就算加载失败。 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/google-guo-nei.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/google-guo-nei.html","title":"Google国内","keywords":"","body":"Google国内 模块引入 1.采用本地导入的方式，将libAD_GoogleCN当做一个module引入你的工程当中 2.在app的build.gardle的dependencies前加入如下代码： repositories { flatDir { dirs 'libs' dirs project(':libAD_GoogleCN').file('libs') } } 3.在app的build.gardle的dependencies中加入以下代码 implementation project(':libAD_GoogleCN') fileTree(dir: 'libs', include: ['*.aar']).each { file -> api(name: file.name.lastIndexOf('.').with { it != -1 ? file.name[0.. 注意事项 当打包结束的时候，建议把build.gradle中加入的代码注释掉，以免接其他渠道的时候还带了google广告的代码 混淆过滤 -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable { public static final *** NULL; } -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keepnames @com.google.android.gms.common.annotation.KeepName class * -keepclassmembernames class * { @com.google.android.gms.common.annotation.KeepName *; } -keepnames class * implements android.os.Parcelable { public static final ** CREATOR; } -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep class com.google.android.gms.ads.** {*;} -keep class com.google.android.gms.common.** {*;} -dontwarn com.google.android.gms.** -dontwarn com.google.protobuf.** -keep class com.google.ads.mediation.** {*;} -dontwarn com.google.ads.mediation.** 集成测试 如何判断sdk是否初始化成功？ 通过GoogleADAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/xiao-mi.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/xiao-mi.html","title":"小米","keywords":"","body":"小米 模块引入 implementation WB.fixVersions('AD:Mi') 注意事项 无 混淆过滤 -keep class com.xiaomi.ad.**{*;} -keep class com.miui.zeus.**{*;} 集成测试 如何判断sdk是否初始化成功？ 通过MiAgent、MiNativeAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/xiao-mi-ju-he.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/xiao-mi-ju-he.html","title":"小米聚合","keywords":"","body":"小米聚合 模块引入 xxxxxImplementation WB.fixVersions('AD:Mi_JuHe') 注意事项 无 混淆过滤 -keep class com.xiaomi.ad.**{*;} -keep class com.miui.zeus.**{*;} 集成测试 如何判断sdk是否初始化成功？ 通过MiAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/tapjoy.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/tapjoy.html","title":"Tapjoy","keywords":"","body":"Tapjoy 模块引入 implementation WB.fixVersions('AD:Tapjoy'） 注意事项 manifestPlaceholders 中需要添加 TAPJOY_SDK_KEY:\"aeNKt_BqS4WQ19eZX3t9LAECNKgVAqhf9alfSTCU3VPEiPqchINE-2R1O99Q\" 混淆过滤 -dontwarn com.tapjoy.** -keep class com.tapjoy.** { *; } -dontwarn com.moat.analytics.mobile.tjy.** -keep class com.moat.analytics.mobile.tjy.** { *; } 集成测试 通过TapjoyAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/vungle.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/vungle.html","title":"Vungle","keywords":"","body":"Vungle 模块引入 implementation WB.fixVersions('AD:Vungle') 注意事项 无 混淆过滤 # Vungle -keep class com.vungle.warren.** { *; } # Evernote -dontwarn com.evernote.android.job.gcm.** -dontwarn com.evernote.android.job.GcmAvailableHelper -dontwarn com.google.android.gms.ads.identifier.** -keep public class com.evernote.android.job.v21.PlatformJobService -keep public class com.evernote.android.job.v14.PlatformAlarmService -keep public class com.evernote.android.job.v14.PlatformAlarmReceiver -keep public class com.evernote.android.job.JobBootReceiver -keep public class com.evernote.android.job.JobRescheduleService -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement -keep class com.google.android.gms.internal.** { *; } # Moat SDK -keep class com.moat.** { *; } -dontwarn com.moat.** 集成测试 如何判断sdk是否初始化成功？ 通过VungleAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/wan-zhuan-hu-lian.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/wan-zhuan-hu-lian.html","title":"玩转互联","keywords":"","body":"玩转互联 模块引入 implementation WB.fixVersions('AD:Uniplay') 和 implementation WB.fixVersions('AD:UniplayA')（隐藏广告） 注意事项 无 混淆过滤 -keep class com.uniplay.adsdk.** -keep class com.joomob.** -keep class * implements android.os.Parcelable { public static final android.os.Parcelable$Creator *; } -keepattributes Annotation -keepattributes JavascriptInterface -keepclassmembers class * { @android.webkit.JavascriptInterface ; } -keepclassmembers public class com.uniplay.adsdk.JavaScriptInterface{ ; ; public *; private *; } -dontwarn com.wzhl.** -keep class com.wzhl.** { *; } 集成测试 如何判断sdk是否初始化成功？ 通过UniplayAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/google-hai-wai.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/google-hai-wai.html","title":"Google海外","keywords":"","body":"Google海外 implementation WB.fixVersions('AD:Google') 注意事项 无 混淆过滤 -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable { public static final *** NULL; } -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keepnames @com.google.android.gms.common.annotation.KeepName class * -keepclassmembernames class * { @com.google.android.gms.common.annotation.KeepName *; } -keepnames class * implements android.os.Parcelable { public static final ** CREATOR; } -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep class com.google.android.gms.ads.** {*;} -keep class com.google.android.gms.common.** {*;} -dontwarn com.google.android.gms.** -dontwarn com.google.protobuf.** -keep class com.google.ads.mediation.** {*;} -dontwarn com.google.ads.mediation.** 集成测试 如何判断sdk是否初始化成功？ 通过GoogleAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/mobivista.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/mobivista.html","title":"Mobivista","keywords":"","body":"Mobivista Mobivista 模块引入 implementation WB.fixVersions('AD:MobVista')（国内） 和 implementation WB.fixVersions('AD:MobVistaOversea')（海外） 注意事项 无 混淆过滤 -keepattributes Signature -keepattributes *Annotation* -keep class com.mintegral.** {*; } -keep interface com.mintegral.** {*; } -keep class android.support.v4.** { *; } -dontwarn com.mintegral.** -keep class **.R$* { public static final int mintegral*; } -keep class com.alphab.** {*; } -keep interface com.alphab.** {*; } 集成测试 如何判断sdk是否初始化成功？ 通过MVAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 广告集成 2.0.4版本，2019年8月20号，不支持分层，分层如果中途关闭会导致下一个播放不了，并且有一定的概率崩溃 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/vivo.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/vivo.html","title":"vivo","keywords":"","body":"vivo 模块引入 implementation WB.fixVersions('AD:VIVO') 注意事项 vivo视频广告比较特殊，打开视频广告的时候需暂停游戏背景音乐，在打开结果回调中打开游戏背景音乐 混淆过滤 -keepattributes SourceFile,LineNumberTable #GDT -keep class com.qq.e.** { public protected *; } -keep class android.support.v4.app.NotificationCompat**{ public *; } #baidu -keep class com.baidu.mobads.*.** { *; } #vivoSDK -keep class com.vivo.*.** { *; } -dontwarn com.androidquery.auth.** 集成测试 如何判断sdk是否初始化成功？ 通过Vivo或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/oneway.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/oneway.html","title":"OneWay","keywords":"","body":"OneWay 模块引入 implementation WB.fixVersions('AD:OneWay') 和 implementation WB.fixVersions('AD:OneWayA')（隐藏广告方式） 注意事项 无 混淆过滤 ############################################ ## OneWaySDK 混淆配置 ## ############################################ -keepattributes *Annotation* -keep enum mobi.oneway.** {*;} -keep class mobi.oneway.** {*;} ############################################ ## OneWay隐藏广告方式 混淆配置 ## ############################################ -keep enum npcj.pofxbz.sdk.* {*;} -keep class npcj.pofxbz.sdk.** {*;} ############################################ ## OkDownload 混淆配置 ## ############################################ -dontwarn com.liulishuo.okdownload.** -keep class com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnSQLite { public com.liulishuo.okdownload.core.breakpoint.DownloadStore createRemitSelf(); public com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnSQLite(android.content.Context); } # okdownload:okhttp -keepnames class com.liulishuo.okdownload.core.connection.DownloadOk ############################################ ## OkHttp 混淆配置 ## ############################################ # okhttp https://github.com/square/okhttp/#proguard -dontwarn okhttp3.** -dontwarn okio.** -dontwarn javax.annotation.** -dontwarn org.conscrypt.** # A resource is loaded with a relative path so the package of this class must be preserved. -keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase 集成测试 如何判断sdk是否初始化成功？ 通过OneWayAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/facebook.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/facebook.html","title":"Facebook","keywords":"","body":"Facebook 模块引入 implementation WB.fixVersions('AD:Facebook'） 注意事项 无 混淆过滤 -keep class com.facebook.ads.**{*;} 集成测试 如何判断sdk是否初始化成功？ 通过FBADAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/ironsource.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/ironsource.html","title":"IronSource","keywords":"","body":"IronSource implementation WB.fixVersions('AD:Ironsource') 和 implementation WB.fixVersions('AD:Ironsource_JuHe') (聚合) 注意事项 无 添加仓库依赖 repositories { maven { url \"https://dl.bintray.com/ironsource-mobile/android-adapters/\" } maven { url \"https://dl.bintray.com/ironsource-mobile/android-sdk\" } maven { //Vungle SDK url 'https://jitpack.io' } } 混淆过滤 1.Ironsource混淆规则 -keepclassmembers class com.ironsource.sdk.controller.IronSourceWebView$JSInterface { public *; } -keepclassmembers class * implements android.os.Parcelable { public static final android.os.Parcelable$Creator *; } -keep public class com.google.android.gms.ads.** { public *; } -keep class com.ironsource.adapters.** { *; } -dontwarn com.ironsource.mediationsdk.** -dontwarn com.ironsource.adapters.** -dontwarn com.moat.** -keep class com.moat.** { public protected private *; } # facebook -dontwarn com.facebook.ads.internal.** -keeppackagenames com.facebook.* -keep public class com.facebook.ads.**{ public protected *; } # facebook end # applovin -keepattributes Signature,InnerClasses,Exceptions,Annotation -keep public class com.applovin.sdk.AppLovinSdk{ *; } -keep public class com.applovin.sdk.AppLovin* { public protected *; } -keep public class com.applovin.nativeAds.AppLovin* { public protected *; } -keep public class com.applovin.adview.* { public protected *; } -keep public class com.applovin.mediation.* { public protected *; } -keep public class com.applovin.mediation.ads.* { public protected *; } -keep public class com.applovin.impl.*.AppLovin { public protected *; } -keep public class com.applovin.impl.**.*Impl { public protected *; } -keepclassmembers class com.applovin.sdk.AppLovinSdkSettings { private java.util.Map localSettings; } -keep class com.applovin.mediation.adapters.** { *; } -keep class com.applovin.mediation.adapter.**{ *; } # applovin end # unity # Keep filenames and line numbers for stack traces -keepattributes SourceFile,LineNumberTable # Keep JavascriptInterface for WebView bridge -keepattributes JavascriptInterface # Sometimes keepattributes is not enough to keep annotations -keep class android.webkit.JavascriptInterface {*;} # Keep all classes in Unity Ads package -keep class com.unity3d.ads.** {*;} # Keep all classes in Unity Services package -keep class com.unity3d.services.** {*;} -dontwarn com.google.ar.core.** -dontwarn com.unity3d.services.** -dontwarn com.ironsource.adapters.unityads.** # unity end # vungle -keep class com.vungle.warren.** { *; } -dontwarn com.vungle.warren.error.VungleError$ErrorCode # Moat SDK -keep class com.moat.** { *; } -dontwarn com.moat.** # Okio -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement # Retrofit -dontwarn okio.** -dontwarn retrofit2.Platform$Java8 # Gson -keepattributes Signature -keepattributes *Annotation* -dontwarn sun.misc.** -keep class com.google.gson.examples.android.model.** { *; } -keep class * implements com.google.gson.TypeAdapterFactory -keep class * implements com.google.gson.JsonSerializer -keep class * implements com.google.gson.JsonDeserializer # Google Android Advertising ID -keep class com.google.android.gms.internal.** { *; } -dontwarn com.google.android.gms.ads.identifier.** # vungle end # google -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable { public static final *** NULL; } -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keepnames @com.google.android.gms.common.annotation.KeepName class * -keepclassmembernames class * { @com.google.android.gms.common.annotation.KeepName *; } -keepnames class * implements android.os.Parcelable { public static final ** CREATOR; } -keep class * extends java.util.ListResourceBundle { protected java.lang.Object[][] getContents(); } -keep class com.google.android.gms.ads.** {*;} -keep class com.google.android.gms.common.** {*;} -dontwarn com.google.android.gms.** -dontwarn com.google.protobuf.** -keep class com.google.ads.mediation.** {*;} -dontwarn com.google.ads.mediation.** # google end #inmobi -keepattributes SourceFile,LineNumberTable -keep class com.inmobi.** { *; } -dontwarn com.inmobi.** -keep public class com.google.android.gms.** -dontwarn com.google.android.gms.** -dontwarn com.squareup.picasso.** -keep class com.google.android.gms.ads.identifier.AdvertisingIdClient{public *;} -keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info{public *;} # skip the Picasso library classes -keep class com.squareup.picasso.** {*;} -dontwarn com.squareup.picasso.** -dontwarn com.squareup.okhttp.** # skip Moat classes -keep class com.moat.** {*;} -dontwarn com.moat.** # skip AVID classes -keep class com.integralads.avid.library.* {*;} #inmobi end # support -keep public class * extends android.support.v4.app.Fragment -keep class android.support.** {*;} -keep class com.google.gson.** {*;} -dontwarn android.support.** # support end #mintegral -keepattributes Signature -keepattributes *Annotation* -keep class com.mintegral.** {*; } -keep interface com.mintegral.** {*; } -keep class android.support.v4.** { *; } -dontwarn com.mintegral.** -keep class **.R$* { public static final int mintegral*; } -keep class com.alphab.** {*; } -keep interface com.alphab.** {*; } #mintegral end 集成测试 如何判断sdk是否初始化成功？ 通过IronSourceAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/api.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/api.html","title":"API","keywords":"","body":"API 模块引入 implementation WB.fixVersions('AD:Vigame') 注意事项 无 混淆过滤 无 集成测试 如何判断sdk是否初始化成功？ 通过VigameAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/oppo.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/oppo.html","title":"oppo","keywords":"","body":"oppo 模块引入 implementation WB.fixVersions('AD:OPPO') 注意事项 无 混淆过滤 -keep class com.oppo.** { public protected *; } -keep class okio.**{ *; } -keep class com.squareup.wire.**{ *; } -keep public class * extends com.squareup.wire.**{ *; } # Keep methods with Wire annotations (e.g. @ProtoField) -keepclassmembers class ** { @com.squareup.wire.ProtoField public *; @com.squareup.wire.ProtoEnum public *; } -keep public class com.cdo.oaps.base.**{ *; } -keepattributes *Annotation* -keepattributes *JavascriptInterface* #support-v4 -keep class android.support.v4.** { *; } 集成测试 如何判断sdk是否初始化成功？ 通过OPPO或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/4399.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/4399.html","title":"4399","keywords":"","body":"4399 模块引入 implementation WB.fixVersions('AD:Ad4399') 注意事项 无 混淆过滤 ### # Mobgi ### -dontwarn -dontoptimize -keepattributes InnerClasses -keepattributes *Annotation* -keepattributes Signature -keepattributes *JavascriptInterface* -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keep class * implements android.os.Parcelable { public static final android.os.Parcelable$Creator *; } -keepnames class * implements java.io.Serializable -dontnote android.net.http.* -dontnote org.apache.http.** -keep public class com.mobgi.* {*;} -keep public class com.mobgi.adutil.parser.NativeAdBeanPro {*;} -keep public interface com.mobgi.** {*;} -keep public class com.mobgi.platform.** {*;} -keep class net.skey.mob.std.dsr.ut.** { *; } ### # AdView ### -dontwarn -keep public class com.kyview.** {*;} -keepclassmembers class * {public *;} -keep public class com.kuaiyou.**.** {*;} -optimizationpasses 5 -dontusemixedcaseclassnames -dontskipnonpubliclibraryclasses -dontpreverify -verbose ### # Baidu ### -keepclassmembers class * extends android.app.Activity { public void *(android.view.View); } -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keep class com.baidu.mobads.*.** { *; } ### # 蓝莓 ### -keep class com.lam.** { *; } ### # 九游 ### -keepattributes SourceFile,LineNumberTable -keepattributes Signature -keepattributes *Annotation* ## common -keep public class * extends android.app.Activity -keep public class * extends android.app.Application -keep public class * extends android.app.Service -keep class android.app.**{*;} -dontwarn android.app.** -keep class android.support.v7.media.*{public *;} -keep class android.support.v4.** { *; } -dontwarn android.support.** ## network libs -keep class android.net.http.** { *; } -dontwarn android.net.** -dontnote android.net.http.* -keep class org.apache.http.** { *; } -dontwarn org.apache.** -dontnote org.apache.commons.codec.** -dontnote org.apache.http.** # Keep native methods -keepclasseswithmembers class * { native ; } ### utdid -keep class com.ta.utdid2.**{*;} -keep class com.ut.device.**{*;} -dontwarn com.ta.utdid2.** -dontwarn com.ut.device.** # Keep ngad-sdk classes -keep class cn.sirius.nga.** {*; } -dontwarn cn.sirius.nga.** -keep class cn.ninegame.library.** {*; } -dontwarn cn.ninegame.library.** -keep class com.taobao.** {*; } -dontwarn com.taobao.** -keep class android.taobao.** {*; } -dontwarn android.taobao.** -keep class com.UCMobile.Apollo.**{*;} ### # OneWay ### -keepattributes *Annotation* -keep enum mobi.oneway.sdk.* {*;} -keep class mobi.oneway.sdk.** {*;} # OkDownload -dontwarn com.liulishuo.okdownload.** -keep class com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnSQLite { public com.liulishuo.okdownload.core.breakpoint.DownloadStore createRemitSelf(); public com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnSQLite(android.content.Context); } # okdownload:okhttp -keepnames class com.liulishuo.okdownload.core.connection.DownloadOk # okhttp https://github.com/square/okhttp/#proguard -dontwarn okhttp3.** -dontwarn okio.** -dontwarn javax.annotation.** -dontwarn org.conscrypt.** # A resource is loaded with a relative path so the package of this class must be preserved. -keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase ### # Toutiao ### -keep class com.bytedance.sdk.openadsdk.** { *; } -keep class com.androidquery.callback.** {*;} -keep public interface com.bytedance.sdk.openadsdk.downloadnew.** {*;} ### # Uniplay ### -dontwarn com.uniplay.** -keep class com.uniplay.** { *; } ### # media 4399 ### -keeppackagenames cn.m4399.admob -keep class cn.m4399.admob.** {*;} -keeppackagenames cn.m4399.support -keep class cn.m4399.support.** {*;} 集成测试 如何判断sdk是否初始化成功？ 通过Ad4399或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/unity.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/unity.html","title":"unity","keywords":"","body":"unity 模块引入 implementation WB.fixVersions('AD:Unity') 注意事项 无 混淆过滤 # Keep filenames and line numbers for stack traces -keepattributes SourceFile,LineNumberTable # Keep JavascriptInterface for WebView bridge -keepattributes JavascriptInterface # Sometimes keepattributes is not enough to keep annotations -keep class android.webkit.JavascriptInterface { *; } # Keep all classes in Unity Ads package -keep class com.unity3d.ads.** { *; } # Keep all classes in Unity Services package -keep class com.unity3d.services.** { *; } -dontwarn com.google.ar.core.** 集成测试 如何判断sdk是否初始化成功？ 通过UnityAgent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/le-dou-guang-gao.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/le-dou-guang-gao.html","title":"乐逗广告","keywords":"","body":"乐逗广告 模块引入 implementation WB.fixVersions('AD:LeDou'） ## 注意事项 ​```text 无 混淆过滤 -dontnote android.net.http.* -dontnote org.apache.http.** -keepclasseswithmembernames class * { # 保持 native 方法不被混淆 native ; } -keepclasseswithmembers class * { # 保持自定义控件类不被混淆 public (android.content.Context, android.util.AttributeSet); } -keepclasseswithmembers class * { public (android.content.Context, android.util.AttributeSet, int); # 保持自定义控件类不被混淆 } -keepclassmembers class * extends android.app.Activity { # 保持自定义控件类不被混淆 public void *(android.view.View); } -keepclassmembers enum * { # 保持枚举 enum 类不被混淆 public static **[] values(); public static ** valueOf(java.lang.String); } -keep class * implements android.os.Parcelable { # 保持 Parcelable 不被混淆 public static final android.os.Parcelable$Creator *; } -keep public class com.mobgi.MobgiAds {*;} -keep public class com.mobgi.MobgiAds$FinishState {*;} -keep public class com.mobgi.MobgiAdsError {*;} -keep public class com.mobgi.MobgiAdsConfig {*;} -keep public class com.mobgi.MobgiInterstitialAd {*;} -keep public class com.mobgi.MobgiVideoAd {*;} -keep public class com.mobgi.MobgiNativeAd {*;} -keep public class com.mobgi.MobgiSplashAd {*;} -keep public class com.mobgi.adutil.parser.NativeAdBeanPro {*;} -keep public interface com.mobgi.** {*;} -keep public class com.mobgi.platform.** {*;} # apponboard -keep class com.apponboard.** { *; } #AdView -dontwarn -keep public class com.kyview.** {*;} -keepclassmembers class * {public *;} -keep public class com.kuaiyou.**.** {*;} -optimizationpasses 5 -dontusemixedcaseclassnames -dontskipnonpubliclibraryclasses -dontpreverify -verbose # Inmobi -keepattributes SourceFile,LineNumberTable -keep class com.inmobi.** { *; } -dontwarn com.inmobi.** -keep public class com.google.android.gms.** -dontwarn com.google.android.gms.** -dontwarn com.squareup.picasso.** -keep class com.google.android.gms.ads.identifier.AdvertisingIdClient{ public *; } -keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info{ public *; } # skip the Picasso library classes -keep class com.squareup.picasso.** {*;} -dontwarn com.squareup.picasso.** -dontwarn com.squareup.okhttp.** # skip Moat classes -keep class com.moat.** {*;} -dontwarn com.moat.** # skip AVID classes -keep class com.integralads.avid.library.* {*;} # -keep public class com.kuaiyou.** {*;} #Centrixlink -dontwarn com.centrixlink.** -keep public class com.centrixlink.** { *; } #Mobvista -keepattributes Signature -keepattributes *Annotation* -keep class com.mintegral.** {*; } -keep interface com.mintegral.** {*; } -keep class android.support.v4.** { *; } -dontwarn com.mintegral.** -keep class **.R$* { public static final int mintegral*; } -keep class com.alphab.** {*; } -keep interface com.alphab.** {*; } #Kingsoft -keep class com.ksc.ad.sdk.**{ *;} -dontwarn com.ksc.ad.sdk.** #AdMod国内版 -keep class * implements com.google.android.gms.ads.mediation.MediationAdapter { public *; } -keep class * implements com.google.ads.mediation.MediationAdapter { public *; } -keep class * implements com.google.android.gms.ads.mediation.customevent.CustomEvent { public *; } -keep class * implements com.google.ads.mediation.customevent.CustomEvent { public *; } -keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable { public static final *** NULL; } -keep class com.google.android.gms.common.internal.ReflectedParcelable -keepnames class * implements com.google.android.gms.common.internal.ReflectedParcelable -keepclassmembers class * implements android.os.Parcelable { public static final *** CREATOR; } -keep @interface android.support.annotation.Keep -keep @android.support.annotation.Keep class * -keepclasseswithmembers class * { @android.support.annotation.Keep ; } -keepclasseswithmembers class * { @android.support.annotation.Keep ; } -keep @interface com.google.android.gms.common.annotation.KeepName -keepnames @com.google.android.gms.common.annotation.KeepName class * -keepclassmembernames class * { @com.google.android.gms.common.annotation.KeepName *; } -keep @interface com.google.android.gms.common.util.DynamiteApi -keep @com.google.android.gms.common.util.DynamiteApi public class * { public ; public ; } -dontwarn android.security.NetworkSecurityPolicy -dontwarn android.app.Notification -dontwarn sun.misc.Unsafe -dontwarn libcore.io.Memory # AdMob国内版 -end #蓝莓 #视频 -keep class com.lam.** { *; } #插屏 -keepattributes Exceptions,InnerClasses,Signature,*Annotation* -keepnames class * implements java.io.Serializable -keep public class com.androidquery.**{*;} -keep public class com.tencent.analytics.sdk.** {*;} ############################################ ## OkDownload 混淆配置 ## ############################################ -dontwarn com.liulishuo.okdownload.** -keep class com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnSQLite { public com.liulishuo.okdownload.core.breakpoint.DownloadStore createRemitSelf(); public com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnSQLite(android.content.Context); } # okdownload:okhttp -keepnames class com.liulishuo.okdownload.core.connection.DownloadOk ############################################ ## OkHttp 混淆配置 ## ############################################ # okhttp https://github.com/square/okhttp/#proguard -dontwarn okhttp3.** -dontwarn okio.** -dontwarn javax.annotation.** -dontwarn org.conscrypt.** # A resource is loaded with a relative path so the package of this class must be preserved. -keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase #穿山甲(今日头条) ###Toutiao v1.9.3.2 -keep class com.bytedance.sdk.openadsdk.** { *; } -keep class com.androidquery.callback.** {*;} -keep class com.bytedance.sdk.openadsdk.service.TTDownloadProvider #Unity ###Unity v2.1.0 # Keep filenames and line numbers for stack traces -keepattributes SourceFile,LineNumberTable # Keep JavascriptInterface for WebView bridge -keepattributes JavascriptInterface # Sometimes keepattributes is not enough to keep annotations -keep class android.webkit.JavascriptInterface { *; } # Keep all classes in Unity Ads package -keep class com.unity3d.ads.** { *; } #Vungle ###Vungle v6.3.18 # Vungle -keep class com.vungle.warren.** { *; } -dontwarn com.vungle.warren.error.VungleError$ErrorCode # Moat SDK -keep class com.moat.** { *; } -dontwarn com.moat.** # Okio -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement # Retrofit -dontwarn okio.** -dontwarn retrofit2.Platform$Java8 # Gson -keepattributes Signature -keepattributes *Annotation* -dontwarn sun.misc.** -keep class com.google.gson.examples.android.model.** { *; } -keep class * implements com.google.gson.TypeAdapterFactory -keep class * implements com.google.gson.JsonSerializer -keep class * implements com.google.gson.JsonDeserializer # Google Android Advertising ID -keep class com.google.android.gms.internal.** { *; } -dontwarn com.google.android.gms.ads.identifier.** 集成测试 如何判断sdk是否初始化成功？ 通过LeDouAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/ngad.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/ngad.html","title":"Ngad","summary":"九游广告","keywords":"","body":"Ngad implementation WB.fixVersions('AD:Ngad'） 注意事项 无 混淆过滤 -keepattributes SourceFile,LineNumberTable -keepattributes Signature -keepattributes *Annotation* ## common -keep public class * extends android.app.Activity -keep public class * extends android.app.Application -keep public class * extends android.app.Service -keep class android.app.**{*;} -dontwarn android.app.** -keep class android.support.v7.media.*{public *;} -keep class android.support.v4.** { *; } -dontwarn android.support.** ## network libs -keep class android.net.http.** { *; } -dontwarn android.net.** -dontnote android.net.http.* -keep class org.apache.http.** { *; } -dontwarn org.apache.** -dontnote org.apache.commons.codec.** -dontnote org.apache.http.** # Keep native methods -keepclasseswithmembers class * { native ; } ### utdid -keep class com.ta.utdid2.**{*;} -keep class com.ut.device.**{*;} -dontwarn com.ta.utdid2.** -dontwarn com.ut.device.** # Keep ngad-sdk classes -keep interface cn.sirius.nga.** {*; } -keep class cn.sirius.nga.** {*; } -dontwarn cn.sirius.nga.** -keep class cn.ninegame.library.** {*; } -dontwarn cn.ninegame.library.** -keep class cn.uc.gamesdk.** {*; } -dontwarn cn.uc.gamesdk.** -keep class com.qq.e.** {*; } -dontwarn com.qq.e.** -keep class com.taobao.** {*; } -dontwarn com.taobao.** -keep class android.taobao.** {*; } -dontwarn android.taobao.** -keep class com.UCMobile.Apollo.**{*;} -keepattributes Signature -keepattributes *Annotation* -keep class com.mintegral.** {*; } -keep interface com.mintegral.** {*; } -keep class android.support.v4.** { *; } -dontwarn com.mintegral.** -keep class **.R$* { public static final int mintegral*; } -keep class com.alphab.** {*; } -keep interface com.alphab.** {*; } -dontwarn com.uniplay.adsdk.** -keep com.uniplay.adsdk.** {*;} 集成测试 如何判断sdk是否初始化成功？ 通过NgadAgent或者ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/360-guang-gao.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/360-guang-gao.html","title":"360广告","keywords":"","body":"360广告 模块引入 implementation WB.fixVersions('AD:Ad360') 注意事项 下面这个gif模块会和360广告冲突： implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.6' 处理方式有下面两种，任选一种： 1.注释掉pl.droidsonroids.gif:android-gif-drawable:1.2.6模块，不过出其他渠道的包需要这个模块，建议采用第二种方式 2.在build.gradle的dependencies之前加入模块去重复的代码 ​```text configurations { all*.exclude group: 'pl.droidsonroids.gif' } ## 混淆过滤 ​```text -ignorewarning -repackageclasses '' -allowaccessmodification -optimizationpasses 2 # Show line number when crash# -keepattributes SourceFile,LineNumberTable -dontskipnonpubliclibraryclassmembers -keepattributes Signature -keepattributes *Annotation* #Ad code -dontwarn com.qihoo.** -dontwarn com.qihoo360.** -dontwarn pl.droidsonroids.** -dontwarn com.androidquery.** -dontwarn com.lucan.ajtools.** -dontwarn okhttp3.** -dontwarn org.aspectj.** -dontwarn com.qq.e.** -dontwarn android.net.http.** -dontwarn okhttp3.** -dontwarn com.ak.torch.** -dontwarn okio.** -dontwarn javax.annotation.** -dontwarn org.conscrypt.** -dontwarn com.bytedance.** -dontwarn com.ss.android.** -dontwarn org.apache.http.** -keep class com.qihoo.** {*;} -keep class com.qihoo360.** { *; } -keep class pl.droidsonroids.** { *; } -keep class com.makeramen.** { *; } -keep class com.bytedance.sdk.openadsdk.** { *; } -keep class com.androidquery.callback.** {*;} -keep public interface com.bytedance.sdk.openadsdk.downloadnew.** {*;} -keep class android.support.v4.app.NotificationCompat**{ public *; } -keep class **.R$* { *; } -keep class com.qq.e.** { public protected *; } -keepclassmembers class * extends android.webkit.WebChromeClient{ public void openFileChooser(...); } -keep class org.apache.** {*;} -keep class android.net.http.** {*;} # A resource is loaded with a relative path so the package of this class must be preserved. -keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase #Ad code End 集成测试 如何判断sdk是否初始化成功？ 通过Ad360Agent或者ADLog查看广告的状态，或者直接通过弹出的广告进行判断 广告接入 2019-8-8：banner广告存在关不掉的情况，因为是传入的Activity去加载banner广告，所以会在closebanner之后openBanner里加载360banner广告的代码还在进行。解决办法：添加flag在调用QihooGameSDK.stopShowBanner()修复 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/sigmob.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/sigmob.html","title":"Sigmob广告","keywords":"","body":"Sigmob广告 模块引入 implementation WB.fixVersions('AD:Sigmob') 集成测试 通过SigmobAgent或者ADLog过滤日志查看 其他问题 无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/kuaishou.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/kuaishou.html","title":"快手广告","keywords":"","body":"快手广告 模块引入 implementation WB.fixVersions('AD:KuaiShou') 集成测试 通过KuaiShouAgent或者ADLog过滤日志查看 其他问题 无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/hua-wei.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/hua-wei.html","title":"华为广告","keywords":"","body":"华为广告 模块引入 根目录build.gradle中修改： buildscript { repositories { ... maven {url 'http://developer.huawei.com/repo/'} ... } } allprojects { repositories { ... maven {url 'http://developer.huawei.com/repo/'} ... } } app目录build.gradle中修改： xxxxxImplementation WB.fixVersions('AD:Huawei') 注意事项 华为提测时需注意 问题1.开屏广告出现之前不能出现游戏界面 答案1：ConfigVigame.xml中添加 true 1500 两个配置，如果游戏内没用适配异形屏需多添加 false 如果AndroidManifest.xml中的 activity 或 application中配置了 android:theme=\"@style/AppWelcome\" ，需删除 AppWelcome 中的android:windowBackground标签 问题2：点击开屏广告后跳转到落地页之前不能出现游戏内容 答案2：模块已做修改，点击后不马上关闭广告 问题3：提测时广告配置的问题 答案3：首次提测时需配置测试广告，待华为测试结束后才可在华为后台提审，审核通过后需改为正式广告，并同步给华为广告那边协助配置广告，后续更新包可以直接配置正式广告 问题4：首次提测，交付件描述问题 答案4：交付件中广告位的描述需和广告配置中的一致，不能出现广告位有配置，交付件中没有提到的情况。 问题5：banner刷新问题 答案5：banner刷新改为在华为中做自动刷新，咱们自己的配置不需配置刷新时间 混淆过滤 -keep class com.huawei.** -keep class com.huawei.**{*;} 集成测试 通过HuaweiAgent 和 HuaweiNativeAgent 、ADLog过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/topon.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/guang-gao-jie-ru/topon.html","title":"TopOn广告","keywords":"","body":"TopOn广告 模块引入 app目录build.gradle中修改： xxxxxImplementation WB.fixVersions('AD:TopOn') 注意事项 TopOn需要在assets目录下创建topon_ad_info.xml文件 所有的广告参数都在这里配置 一个广告id同一时间只有一个广告，如果有多个广告位使用同一个id，返回的状态都是一样的。 一个广告位展示了广告，所有使用该广告id的广告位调用isAdReady方法返回的状态都会是false。 广告配置 topon_ad_info的内容如下 887357694 104182 toutiao 混淆过滤 -keep class com.androidquery.callback.** {*;} -keep class com.ss.sys.ces.* {*;} -keep class com.bytedance.sdk.openadsdk.** { *; } -keep public interface com.bytedance.sdk.openadsdk.downloadnew.** {*;} -keep class com.pgl.sys.ces.* {*;} -keep class org.chromium.** { *; } -keep class aegon.chrome.** { *; } -keep class com.kwai.**{ *; } -dontwarn com.kwai.** -dontwarn com.kwad.** -dontwarn com.ksad.** -dontwarn aegon.chrome.** -keep class com.kwad.sdk.** { *;} -keep class com.ksad.download.** { *;} -keep class com.kwai.filedownloader.** { *;} -keep class com.qq.e.** { public protected *; } -keep class android.support.v4.**{ public *; } -keep class android.support.v7.**{ public *; } -keep class MTT.ThirdAppInfoNew { *; } -keep class com.tencent.** { *; } -dontwarn dalvik.** -dontwarn com.tencent.smtt.** ################### anythink_banner ########################### -keep public class com.anythink.network.** -keepclassmembers class com.anythink.network.** { public *; } -dontwarn com.anythink.** -dontwarn com.anythink.hb.** -keep class com.anythink.hb.**{ *;} -dontwarn com.anythink.china.api.** -keep class com.anythink.china.api.**{ *;} ################### anythink_banner ########################### ################### ijkplayer ################################# #-keep class org.chromium.** {*;} -keep class com.kwai.video.player.** { *; } -dontwarn com.kwai.video.player.** -keep class com.kwai.log.** { *; } -keep class com.kwai.video.cache.** { *; } -keep class com.kwai.video.hodor.** { *; } -keep class com.kwai.player.debuginfo.** { *; } #-keep class aegon.chrome.** { *; } # #-dontwarn com.kwai.** #-dontwarn com.kwad.** #-dontwarn com.ksad.** #-dontwarn aegon.chrome.** #混淆保护 非必须， 增加此列是为了查日志时能够方便对应上sdk代码 -keep class com.kwad.sdk.** { *;} -keep class com.ksad.download.** { *;} -keep class com.kwai.filedownloader.** { *;} -keep class kwad.support.** { *; } -dontwarn okio.** -dontwarn okhttp3.** # 混淆一级即可 -keep class okhttp3.* {*;} -keep class com.google.gson.* {*;} #保留注解，如果不添加改行会导致我们的@Keep注解失效 -keepattributes *Annotation* #直播相关混淆 -dontwarn io.netty.** -dontwarn com.kuaishou.livestream.message.** -dontwarn com.kuaishou.protobuf.** -keep class com.google.protobuf.nano.** {*;} -keep class com.kuaishou.livestream.message.nano.** {*;} -keep class com.kuaishou.protobuf.livestream.nano.** {*;} -keep class com.kuaishou.merchant.message.nano.** {*;} -keep class com.kuaishou.protobuf.merchant.message.nano.** {*;} # 安全sdk -keep class com.kuaishou.android.security.**{*;} -keep class com.kuaishou.dfp.**{*;} -keep class com.kuaishou.dfp.KWEGIDDFP {*;} -keep class com.kuaishou.dfp.ResponseDfpCallback {*;} -keep class com.kuaishou.dfp.env.jni.Watermelon {*;} -dontwarn com.squareup.okhttp3.** -keep class com.squareup.okhttp3.** { *;} #-dontwarn okio.** -keep class com.google.protobuf.** {*;} -keep class com.kuaishou.dfp.env.Proxy.** {*;} #new added for android 10 -keep class com.bun.miitmdid.core.** {*;} -keep class android.support.rastermill.** { *; } ######################### 穿山甲 ######################## -keep class com.bytedance.embedapplog.AppLog { public *; } -keep public interface com.bytedance.embedapplog.IDataObserver { *; } -keep public interface com.bytedance.embedapplog.IAppParam { *; } -keep public interface com.bytedance.embedapplog.IExtraParams { *; } -keep public interface com.bytedance.embedapplog.IPicker { *; } -keep public interface com.bytedance.embedapplog.IOaidObserver { *; } -keep public interface com.bytedance.embedapplog.ISensitiveInfoProvider { *; } -keep class com.bytedance.embedapplog.IOaidObserver$Oaid { *; } -keep class com.bytedance.embedapplog.GameReportHelper { public *; } -keep class com.bytedance.embedapplog.InitConfig { public *; } -keep class com.bytedance.embedapplog.util.UriConfig { public *; } -keep class com.bytedance.embedapplog.tracker.Tracker { public *; } -keep class com.bytedance.embedapplog.picker.Picker { public *; } -keep class com.bytedance.embedapplog.tracker.WebViewJsUtil { *; } -keep interface com.bytedance.embed_device_register.DrLogWriter { public *; } -keep interface com.bytedance.embed_bdtracker.bt { public *; } -keep class com.bytedance.embed_bdtracker.bt$a { public *; } -keep class com.bytedance.embed_bdtracker.bt$a$a { public *; } ######################### 穿山甲 ######################## ######################### mobvista ######################## -keep class com.anythink.china.api.**{ *;} -keepattributes Signature -keepattributes *Annotation* -keep class com.mintegral.** {*; } -keep interface com.mintegral.** {*; } -keep interface androidx.** { *; } -keep class androidx.** { *; } -keep public class * extends androidx.** { *; } -dontwarn com.mintegral.** -keep class **.R$* { public static final int mintegral*; } -keep class com.alphab.** {*; } -keep interface com.alphab.** {*; } ######################### mobvista ######################## ######################### sigmob ######################## # androidx -keep class com.google.android.material.** {*;} -keep class androidx.** {*;} -keep public class * extends androidx.** -keep interface androidx.** {*;} -dontwarn com.google.android.material.** -dontnote com.google.android.material.** -dontwarn androidx.** # android.support.v4 -dontwarn android.support.v4.** -keep class android.support.v4.** { *; } -keep interface android.support.v4.** { *; } -keep public class * extends android.support.v4.** # WindAd -keep class sun.misc.Unsafe { *; } -dontwarn com.sigmob.** -keep class com.sigmob.**.**{*;} # miitmdid -keep class com.bun.miitmdid.core.** {*;} -dontwarn com.bun.miitmdid.core.** ######################### sigmob ######################## 集成测试 通过TopOnAdManager 和 UnityPlayerActivity 、anythink过滤日志查看广告状态，或者直接通过弹出的广告进行判断 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/zhi-fu-jie-ru-can-kao/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/zhi-fu-jie-ru-can-kao/","title":"支付接入参考","keywords":"","body":"支付接入参考 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/zhi-fu-jie-ru-can-kao/wei-xin-zhi-fu.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/zhi-fu-jie-ru-can-kao/wei-xin-zhi-fu.html","title":"微信支付","keywords":"","body":"微信支付 第一步：引入模块 修改build.gralde文件，加入微信支付所需模块: implementation WB.fixVersions('Social:WeChat') implementation WB.fixVersions('Pay:WeChatPay') 以上两个模块有依赖关系，必须同时引入 第二步：添加入口文件 在{$包名}/wxapi目录下，添加WXPayEntryActivity.java文件，内容如下 package com.dn.tgxm.gg.wxapi; import android.app.Activity; import android.content.Intent; import android.os.Bundle; import com.libSocial.WeChat.WeChatPayActivityHandler; public class WXPayEntryActivity extends Activity { private WeChatPayActivityHandler weChatPayActivityHandler = null; @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); weChatPayActivityHandler = new WeChatPayActivityHandler(); weChatPayActivityHandler.onCreate(this); this.finish(); } @Override protected void onNewIntent(Intent intent) { super.onNewIntent(intent); if (weChatPayActivityHandler != null) { weChatPayActivityHandler.onNewIntent(intent); } } } 第三步：配置计费信息 1.在assets目录添加ConfigPay.xml,用于配置手机在不同运营商模式下默认所使用的计费类型 属性 DefalultOperator用来配置手机在不同运营商模式下所使用的计费类型，各属性含义如下 属性 含义 CMCC 移动运营商 UNICOM 联通 TELECOM 电信 Other 无卡 2.在assets目录添加feedata_wx.xml，用于配置游戏中的计费点信息 1 1 20钻石 2 1200 50钻石 feeinfo标签表示一条计费点信息，属性说明如下： 名称 类型 解释 ID int 计费点ID price int 价格 desc string 计费点描述 注意事项 包名需使用申请微信支付能力时的包名 签名需使用申请支付时的签名，一般情况下为我方签名。如测试需要可联系我方技术人员协助签名 需要在真实包名文件路径下放置wxapi/WXPayEntryActivity.java文件 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/zhi-fu-jie-ru-can-kao/zhi-fu-bao.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/zhi-fu-jie-ru-can-kao/zhi-fu-bao.html","title":"支付宝","keywords":"","body":"支付宝 第一步：引入模块 修改build.gralde文件，加入支付宝所需模块: implementation WB.fixVersions('Pay:AliPayLoader') implementation WB.fixVersions('Pay:AliPayApp') 以上两个模块有依赖关系，必须同时引入 第二步：配置计费信息 1.在assets目录添加ConfigPay.xml,用于配置手机在不同运营商模式下默认所使用的计费类型 属性 DefalultOperator各属性含义如下 属性 含义 CMCC 移动运营商 UNICOM 联通 TELECOM 电信 Other 无卡 2.在assets目录添加feedata_ali.xml，用于配置游戏中的计费点信息 1 1 20钻石 2 1200 50钻石 feeinfo标签表示一条计费点信息，属性说明如下： 名称 类型 解释 ID int 计费点ID price int 价格 desc string 计费点描述 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/","title":"统计接入参考","keywords":"","body":"统计接入参考 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/tenjin.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/tenjin.html","title":"Tenjin","keywords":"","body":"Tenjin 模块引入 implementation WB.fixVersions('TJ:Tenjin') 混淆过滤 -keep class com.tenjin.** { *; } -keep public class com.google.android.gms.ads.identifier.** { *; } -keep public class com.google.android.gms.common.** { *; } -keep public class com.android.installreferrer.** { *; } -keep class * extends java.util.ListResourceBundle { protected Object[][] getContents(); } -keepattributes *Annotation* 测试 引荐安装 运行应用程序，然后在logcat中过滤 RFF tag, 在命令行中先启动adb，然后输入命令： adb shell am broadcast -a com.android.vending.INSTALL_REFERRER -n /com.tenjin.android.TenjinReferrerReceiver --es \"referrer\" \"ai=test&gclid=click_test\" 会在logcat中看到 ai=test&gclid=click_test 的输出 注意 替换成成包名 例如： adb shell am broadcast -a com.android.vending.INSTALL_REFERRER -n com.puzzle.game.hw/com.tenjin.android.TenjinReferrerReceiver --es \"referrer\" \"ai=test&gclid=click_test\" 能看到日志正常输出 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/adjust.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/adjust.html","title":"Adjust","keywords":"","body":"Adjust 模块引入 implementation 'com.libVigame.TJ:Adjust:1.0.5' 配置文件说明 需要在app的build.gradle的添加如下配置： android { manifestPlaceholders = [ .... ADJUST_TOKEN:\"xxx\", //应用识别码,adjust后台获取 ADJUST_TESTMODEL:\"false\", //是否是测试模式， 测试时设置为 true，注意正式版一定要为false ... ] } } 混淆过滤 -keep class com.adjust.sdk.** { *; } -keep class com.google.android.gms.common.ConnectionResult { int SUCCESS; } -keep class com.google.android.gms.ads.identifier.AdvertisingIdClient { com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context); } -keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info { java.lang.String getId(); boolean isLimitAdTrackingEnabled(); } -keep public class com.android.installreferrer.** { *; } 其他注意事项 通过 AdjustAgent tag过滤，查看是否有 FirebaseInstanceId pushToken 输出，在装有 googleplay的手机上测试，如果有输出则正常，无输出则不能统计卸载需要排查上面步骤是否都正确 正式包 ADJUST_TESTMODEL 一定要设置为 false 可通过 Adjust tag过滤日志，在测试模式下可看到如下输出说明接入没有问题 V/Adjust: Path: /sdk_click ClientSdk: android4.6.0 Parameters: app_token abc123abc123 click_time yyyy-MM-dd'T'HH:mm:ss.SSS'Z'Z created_at yyyy-MM-dd'T'HH:mm:ss.SSS'Z'Z environment sandbox gps_adid 12345678-0abc-de12-3456-7890abcdef12 needs_attribution_data 1 referrer adjust_reftag=abc1234&tracking_id=123456789&utm_source=network&utm_medium=banner&utm_campaign=campaign reftag abc1234 source reftag tracking_enabled 1 其他问题可查看 https://github.com/adjust/android_sdk/blob/master/doc/chinese/README.md "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/appsflyer.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/appsflyer.html","title":"AppsFlyer","keywords":"","body":"AppsFlyer 模块引入 implementation WB.fixVersions('TJ:AppsFlyer') Manifest参数选项 参数 说明 备注 AppsFlyer_DevKey 在AppsFlyer上申请的参数 eg：X9NxxaMp4neHCFYreDxtd5 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置“AppsFlyer_DevKey”的值,如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... AppsFlyer_DevKey:\"X9NxxaMp4neHCFYreDxtd5\", ... ] } } 混淆过滤 -dontwarn com.android.installreferrer -keep class com.appsflyer.** { *; } "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/headlinetrcking.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/headlinetrcking.html","title":"HeadlineTrcking","keywords":"","body":"HeadlineTrcking 模块引入 implementation WB.fixVersions('TJ:HeadLine') Manifest参数选项 参数 说明 备注 HEADLINE_APPID 在头条统计上申请的appId eg：153354 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置“HEADLINE_APPID”的值,如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... HEADLINE_APPID:\"153354\", ... ] } } 混淆过滤 -keep com.bytedance.** -keep com.bytedance.**{*;} -keep com.ss.android.common.** -keep com.ss.android.common.**{*;} 可通过过滤 TeaLog 查看log "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/umeng.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/umeng.html","title":"Umeng","keywords":"","body":"Umeng 模块引入 implementation WB.fixVersions('TJ:UMeng') Manifest参数选项 参数 说明 备注 UMENG_APPKEY 在友盟上申请的appKey eg：5bbb2803b465f5c58c000017 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置“UMENG_APPKEY”的值,如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... UMENG_APPKEY:\"5bbb2803b465f5c58c000017\", ... ] } } 混淆过滤 -keep class com.umeng.** -keep class com.umeng.**{*;} 其他注意事项 须在工程根目录的build.gradle中添加 buildscript { repositories { ... maven { url 'https://dl.bintray.com/umsdk/release' } } } allprojects { repositories { ... maven { url 'https://dl.bintray.com/umsdk/release' } } } "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/facebook.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/facebook.html","title":"Facebook","keywords":"","body":"Facebook 模块引入 implementation WB.fixVersions('TJ:Facebook') Manifest 1.参数选项 参数 说明 备注 facebook_app_id 在facebook上申请的参数 eg：344465672947670 2.测试检测 反编译出包的apk，搜索“com.facebook.sdk.ApplicationId”看看它的value值是否为344465672947670 com.facebook.sdk.ApplicationId 配置文件说明 需要在res/values/strings.xml目录下添加：(\"344465672947670\"是你的faceAPPId) 344465672947670 混淆过滤 -keep class com.facebook.**{*;} "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/reyun.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/reyun.html","title":"热云","keywords":"","body":"热云 模块引入 implementation WB.fixVersions('TJ:ReYun') Manifest参数选项 参数 说明 备注 ReYunAppKey 在热云上申请的appKey（商务提供） eg：5bbb2803b465f5c58c000017 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置“ReYunAppKey”的值,如下： android { ... defaultConfig { manifestPlaceholders = [ .... ReYunAppKey:\"5bbb2803b465f5c58c000017\", ... ] } } 问题排查 通过 tracking 字段过滤 log,查看 是否有热云上报数据输出 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/dateeyetrcking.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/dateeyetrcking.html","title":"DateEyeTrcking","keywords":"","body":"DateEyeTrcking 模块引入 implementation WB.fixVersions('TJ:DateEye') Manifest参数选项 参数 说明 备注 DC_APPID 无 eg：可为空 WB_CHANNEL 渠道 eg：vivo DC_TRACKING_APPID dataeye tracking eg：C6079041E388322EAB5F6D7718E86DB6F DC_REPORT_MODE 无 eg：可为空 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置各个参数的值, 一般只需要设置DC_TRACKING_APPID和WB_CHANNEL的值，如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... DC_APPID:\"\", DC_TRACKING_APPID:\"C6079041E388322EAB5F6D7718E86DB6F\", DC_REPORT_MODE:\"\", WB_CHANNEL:\"vivo\", ... ] } } 混淆过滤 -dontwarn com.android.installreferrer -keep class com.appsflyer.** { *; } "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/gdt.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/gdt.html","title":"GDT","keywords":"","body":"GDT 模块引入 implementation WB.fixVersions('TJ:GDT') 配置文件说明 需要在app的build.gradle的添加如下配置： android { manifestPlaceholders = [ .... GDTAppId:\"\", //appid参数，配置工具统计参数里面可以拿到 GDTAppKey:\"\", //appkey参数，配置工具统计参数里面可以拿到 ... ] } } 混淆过滤 -dontwarn com.qq.gdt.action.** -keep class com.qq.gdt.action.** {*;} 测试 引荐安装 测试方法包含以下两步： 1.日志过滤GDTAction，查看是否初始化成功 2.抓包。向a.gdt.qq.com发出请求，dp3.qq.com会返回校验结果。SDK会校验包名：安装SDK的包和上传到应用宝的包，如果包名不一致，会返回报错 '51000 package name check failed';如果包名校验成功：{\"ret\":0,\"msg\":\"success\"} "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/aiqiyi.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/aiqiyi.html","title":"爱奇艺","keywords":"","body":"爱奇艺 模块引入 implementation WB.fixVersions('TJ:IQiYi') Manifest参数选项 参数 说明 备注 IQiYiAppid 在后台申请的appid eg：123456 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置“IQiYiAppid”的值,如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... IQiYiAppid:\"123456\", ... ] } } 混淆过滤 -keep class com.iqiyi.qilin.trans.** -keep class com.iqiyi.qilin.trans.**{*;} 其他注意事项 无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/pdd.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/pdd.html","title":"拼多多","keywords":"","body":"拼多多 模块引入 implementation WB.fixVersions('TJ:PDD') Manifest参数选项 参数 说明 备注 PDD_APPID appid,商务/需求单提供 eg：12345 PDD_APPSECRET appsecret,商务/需求单提供 eg：12345 配置文件说明 需要在app的build.gradle的manifestPlaceholders中设置 PDD_APPID 和 PDD_APPSECRET 的值,如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... PDD_APPID:\"xxx\", PDD_APPSECRET:\"xxx\", ... ] } } 混淆过滤 -dontwarn com.xunmeng.pap.** -keep class com.xunmeng.pap.** {*;} 注意事项 查看接入是否成功 可以过滤 PAPTrans 查看log,如果输出 PAPTrans-e: report success 则是接入正常，其他是有问题。需参数和包名一致，产品名不一致也有可能导致上报失败 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/kuaishou.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tong-ji-jie-ru/kuaishou.html","title":"快手","keywords":"","body":"快手 模块引入 implementation WB.fixVersions('TJ:KuaiShou') 配置文件说明 需要在app的build.gradle的添加如下配置： android { manifestPlaceholders = [ .... KuaiShou_Appid:\"\", //快手appid参数，需求单里面可以拿到 KuaiShou_Appname:\"\", //快手appname参数，需求单里面可以拿到 ... ] } } 混淆过滤 -keep class com.kwai.monitor.** { *; } 查看接入是否正常 运行应用程序，然后在logcat中过滤 KS_LOG tag 成功log: register sdk success report log success eventName:EVENT_ACTIVE 失败log: register sdk fail : "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/","title":"渠道接入参考","keywords":"","body":"渠道接入参考 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/lenovo.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/lenovo.html","title":"联想","keywords":"","body":"联想 模块引入 implementation WB.fixVersions('Pay:Lenovo') 配置文件说明 待添加 混淆过滤 #待添加 集成测试 如何判断sdk是否初始化成功？ 暂无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/googleplay.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/googleplay.html","title":"GooglePlay","keywords":"","body":"GooglePlay 模块引入 implementation WB.fixVersions('Pay:GooglePlay') 配置文件说明 无需特殊配置，带上计费文件即可 混淆过滤 -keep class com.android.vending.billing.** 集成测试 如何判断sdk是否初始化成功？ 通过GooglePayAgent查看日志，当日志输出“Init success,The BillingClient is ready”则证明初始化成功。 问题说明 1.初始化失败： 日志报：Init failed,The BillingClient is not ready,code=3 1）可能是google play service版本太旧，2）SDK版本太旧，3）vpn地域不支持，4）国内手机不支持。 解决方法：a.先验证环境。在商店下载一个有内购的应用，看能否进行内购。b.如果别人的能进行内购之后，再次测试你的应用，看是否正常，来确认应用的支付环境 是否正常。 2. 能够查询价格，但无法购买，提示\"商品无法购买\"之类。 这是基础配置问题，有以下可能：版本号与线上版本不对应，测试版本却不是测试账号(大概率)，签名不对应。 3. 能调起弹窗，但是弹窗内容是内部错误，日志为“getDebugMessage==An internal error occurred”的，建议更换VPN。 4. 能够查询价格，但无法调起支付都没有弹窗，错误码:3，报错：Error:In-app billing error: Null data in IAB activity resul。 原因是没有给Google play商店弹窗权限，国内很多手机都有弹窗权限管理，特别是小米，如果没允许，是不会有任何提示，并且拦截了的。(这个问题在新版的gp商 店已经不存在） 5. 支付提示成功，但却走onQueryFail回调，并且返回的商品列表为null。 这是因为你调错了方法，记得purchaseInApp是内购的，purchaseSubs是订阅的。查询的时候同理。另外查询的时候报错，很有可能是你setSKUS的时候传了一个空 字符串，而不是空数组。 6. 查询的时候返回的商品列表长度为0。 setSkus的时候将内购sku和订阅sku的参数顺序弄错了，应该是第一个是内购的，第二个参数是订阅的。 或者是商品还没有发布成功，需要等待一段时间(很有可能，新发布的商品是无论怎么查询还是购买，谷歌那边都是没有响应的) 7.错误码总结： 响应代码 值 说明 BILLING_RESPONSE_RESULT_OK 0 成功 BILLING_RESPONSE_RESULT_USER_CANCELED 1 用户按上一步或取消对话框 BILLING_RESPONSE_RESULT_SERVICE_UNAVAILABLE 2 网络连接断开 BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE 3 所请求的类型不支持 Billing API 版本(支付环境问题) BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE 4 请求的商品已不再出售。 BILLING_RESPONSE_RESULT_DEVELOPER_ERROR 5 提供给 API 的参数无效。此错误也可能说明未在 Google Play 中针对应用内购买结算正确签署或设置 应用，或者应用在其清单中不具备所需的权限。 BILLING_RESPONSE_RESULT_ERROR 6 API 操作期间出现严重错误 BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED 7 未能购买，因为已经拥有此商品 BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED 8 未能消费，因为尚未拥有此商品 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/vivo.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/vivo.html","title":"vivo","keywords":"","body":"vivo 模块引入 implementation WB.fixVersions('Pay:VivoSingle') (Vivo单机计费 特殊说明才用此版本的sdk) 和 implementation WB.fixVersions('Pay:Vivo') (Vivo联运) 和 implementation WB.fixVersions('ay:VivoOverseas') (Vivo海外) Manifest参数选项 无 配置文件说明 assets目录加入feedata_vivo.xml 68fafd6cd3495af63256172ecc87d74c a60092d44708f9b559eb bb2f36d2d947f413eb4a9e10f7cca5c3 1 600 002 30赠25枚钻石 混淆过滤 -keep class com.bbkmobile.** -keep class com.bbkmobile.**{*;} vivo渠道特殊要求 icon需注意： res中需包含以下四个文件夹及对应的icon,icon尺寸要正确 drawable-hdpi 对应 icon尺寸 192x192 drawable-xhdpi 对应 icon尺寸 256x256 drawable-xxhdpi 对应 icon尺寸 384x384 drawable-xxxhdpi 对应 icon尺寸 512x512 退出弹框要求： 游戏退出前需弹出vivo渠道的退出弹框（vivo手机，非vivo手机会直接退出看不到vivo退出弹框） 集成测试 如何判断sdk是否初始化成功？ 游戏打开会有vivo对应的悬浮按钮 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/360.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/360.html","title":"360","keywords":"","body":"360 模块引入 implementation WB.fixVersions('Social:QihooOffline') （单机计费） 和 implementation WB.fixVersions('Social:QihooOnline') （在线） Manifest参数选项 参数 说明 备注 QHOPENSDK_APPKEY 360APPKEY eg：55671023f48310cf5f9ea24cc8513f75 QHOPENSDK_PRIVATEKEY 360PRIVATEKEY eg：98d6571040a9204fc80b9af7da722bac QHOPENSDK_APPID 360AppId eg：204370606 参数获取 通过360自检工具获取QHOPENSDK_PRIVATEKEY，里面有操作说明，自检工具链接： \\\\192.168.1.252\\产品配置\\渠道sdk汇总\\360\\360渠道最新SDK-V1002.0.0_608-2017-11-16-\\360单机SDK_V1002.0.0_608\\05-自检工具及测试用例\\Check_Tools 配置文件说明 assets目录加入feedata_360.xml 1101 1 30赠25枚钻石 res/xml目录下qihoo_game_sdk_sync_adapter.xml文件的配 将“${applicationId}”替换为你应用的包名 混淆过滤 -keep class okhttp3.** {*;} -dontwarn okhttp3.** -keep class com.yeepay.** {*;} -dontwarn com.yeepay.** -keep class com.tencent.** {*;} -dontwarn com.tencent.** -keep class com.sina.** {*;} -dontwarn com.sina.** -keep class com.qihoosdk.** {*;} -dontwarn com.qihoosdk.** -keep class com.qihoopp.** {*;} -dontwarn com.qihoopp.** -keep class com.qihoo360.** {*;} -dontwarn com.qihoo360.** -keep class com.qihoo.** {*;} -dontwarn com.qihoo.** -keep class com.nearme.atlas.** {*;} -dontwarn com.nearme.atlas.** -keep class com.ipaynow.** {*;} -dontwarn com.ipaynow.** -keep class com.iapppay.** {*;} -dontwarn com.iapppay.** -keep class com.heepay.** {*;} -dontwarn com.heepay.** -keep class com.cloudplay.** {*;} -dontwarn com.cloudplay.** -keep class com.alipay.** {*;} -dontwarn com.alipay.** -keep class com.a.** {*;} -dontwarn com.a.** -keep class cn.pp.** {*;} -dontwarn cn.pp.** -keep class org.json.alipay.** {*;} -dontwarn org.json.alipay.** -keep class qihoohttp.** {*;} -dontwarn qihoohttp.** 集成测试 如何判断sdk是否初始化成功？ 360自检工具通过了就OK。 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/huawei.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/huawei.html","title":"华为","keywords":"","body":"华为 模块引入 implementation WB.fixVersions('Pay:Huawei') 配置文件说明 根目录 build.gradle中需添加： buildscript { repositories { google() jcenter() maven {url 'http://developer.huawei.com/repo/'} } dependencies { ... classpath 'com.huawei.agconnect:agcp:1.3.1.300' } } allprojects { repositories { ... maven {url 'http://developer.huawei.com/repo/'} } ... } app目录 build.gradle中需添加： apply plugin: 'com.huawei.agconnect' //引入华为插件 需要商务提供 agconnect-services.json 文件，不然会报错 manifestPlaceholders = [ ... HWCpId:\"\",// 华为商户id HWAppId:\"\",// 华为应用id ] assets目录加入feedata_huawei.xml 深圳市动能无线传媒有限公司 MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlohZLPbK/tKC7YlAhc81gV2pNEap1Odty3C+10FMyCrzb5PdCc6rSXboNhJTK6UdskAI3GADkcpDE7aohlxkQCOPChTTXQ5b6P712WyR0unORLod3bkJ6i/RluuW9QhycdR7k2zLgbYlCL35on3L7SJDJxJ1IwcTSZc0EkhmGifTV/5+ubAt/RtiCBtm7O8Q7hmWqSSXE+uFi+MlE8Y0KzkdWh3VTsb1928R7MIAVou1ob4i3eKcSQH6ieWId9+Cqk0u4zfXr6zYjv/CmJCGV2HFHP8I3WdDGd9Q7loyYm+eyQsN5DwOw0e1CvVKgSrB5TOBY4i8eaSng9HH4krlAwIDAQAB 10762302 890086000102058425 1101 1 测试华为计费 混淆过滤 #华为 -keep class com.huawei.** -keep class com.huawei.**{*;} -keep class com.android.huawei.** -keep class com.android.huawei.**{*;} -keep class com.hianalytics.** -keep class com.hianalytics.**{*;} -ignorewarning -keepattributes *Annotation* -keepattributes Exceptions -keepattributes InnerClasses -keepattributes Signature -keepattributes SourceFile,LineNumberTable -keep class com.hianalytics.android.**{*;} -keep class com.huawei.updatesdk.**{*;} -keep class com.huawei.hms.**{*;} -keep class com.huawei.gamebox.plugin.gameservice.**{*;} -keep public class com.huawei.android.hms.agent.** extends android.app.Activity { public *; protected *; } -keep interface com.huawei.android.hms.agent.common.INoProguard {*;} -keep class * extends com.huawei.android.hms.agent.common.INoProguard {*;} 集成测试 1.如何判断sdk是否初始化成功？ 可通过名为\"HuaweiAgent\"的Tag查看日志，登陆成功会有“game login: onResult: retCode=”等日志输出。 2.官方错误码参考文档 https://developer.huawei.com/consumer/cn/service/hms/catalog/HuaweiJointOperation.html?page=hmssdk_jointOper_api_reference_errorcode "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/coolpad.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/coolpad.html","title":"酷派","keywords":"","body":"酷派 模块引入 implementation WB.fixVersions('Pay:Coolpad') 配置文件说明 待添加 混淆过滤 #待添加 集成测试 如何判断sdk是否初始化成功？ 暂无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/xiao-mi.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/xiao-mi.html","title":"小米","summary":"小米","keywords":"","body":"小米 模块引入 implementation WB.fixVersions('Pay:MiPay_New') 和 implementation WB.fixVersions('Pay:MiSingle') （单机计费,无特殊说明的情况下带这个模块） 小米签名权限需注意 如果需要小米签名 需在 AndroidManifest.xml文件中添加下面的权限 配置文件说明 assets目录加入feedata_mi.xml 2882303761517881611 5691788142611 1 600 code2 30赠25枚钻石 混淆过滤 -dontwarn com.xiaomi.** -keep class com.xiaomi.** {*;} -dontwarn org.xiaomi.** -keep class org.xiaomi.** {*;} -dontwarn com.wali.** -keep class com.wali.** {*;} -dontwarn com.mi.milink.** -keep class com.mi.milink.** {*;} -dontwarn cn.com.wali.** -keep class cn.com.wali.** {*;} -keep class com.example.milinksdkcore.** {*;} -dontwarn org.apache.** -keep class org.apache.** {*;} -dontwarn android.net.** -keep class android.net.** {*;} -keep class android.** {*;} -keep class com.android.** {*;} -keep class com.google.** {*;} -keep class com.alipay.** {*;} -keep class com.ut.device.** {*;} -keep class com.ta.utdid2.** {*;} -keep class org.greenrobot.** {*;} -keep class com.bumptech.** {*;} -keep class com.payeco.** {*;} 集成测试 如何判断sdk是否初始化成功？ 答：查看Tag为MiAgent的日志输出。 可根据 MiAgent tag 筛选log，进行查看 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/oppo.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/oppo.html","title":"oppo","keywords":"","body":"oppo 模块引入 //根据需求单确定要带哪个模块 //如果是说 带oppo sdk implementation WB.fixVersions('Pay:Oppo') //如果是说带oppo 超休闲sdk implementation WB.fixVersions('Pay:Oppo_Casual') Manifest参数选项 参数 说明 备注 OPPO_APPKEY OPPO的APPKEY eg：59fc9873a2c244c9a085554ca31f63b5 配置文件说明 assets目录加入feedata_oppo.xml 59fc9873a2c244c9a085554ca31f63b5 8b87f2413df14ddba017087536bdef26 1 600 002 30赠25枚钻石 混淆过滤 -keep class com.oppo.** { public protected *; } -keep class okio.**{ *; } -keep class com.squareup.wire.**{ *; } -keep public class * extends com.squareup.wire.**{ *; } # Keep methods with Wire annotations (e.g. @ProtoField) -keepclassmembers class ** { @com.squareup.wire.ProtoField public *; @com.squareup.wire.ProtoEnum public *; } -keep public class com.cdo.oaps.base.**{ *; } -keepattributes *Annotation* -keepattributes *JavascriptInterface* 集成测试 如何判断sdk是否初始化成功？ 游戏打开会有oppo对应的悬浮按钮 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/4399.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/4399.html","title":"4399","keywords":"","body":"4399 模块引入 implementation WB.fixVersions('Pay:M4399') 配置文件说明 assets目录加入feedata_huawei.xml 119803 11001 100 30赠25枚钻石 混淆过滤 #华为 -dontwarn android.support.v4.** -keep class android.support.v4.** { *; } -keep public class * extends android.support.v4.** -dontwarn com.unipay.** -keep class cn.m4399.operate.** {*;} -keep class cn.m4399.recharge.** {*;} -keepclassmembers class cn.m4399.recharge.R$* {*;} 集成测试 如何判断sdk是否初始化成功？ 暂无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/kugou.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/kugou.html","title":"酷狗","keywords":"","body":"酷狗 模块引入 implementation WB.fixVersions('Pay:Kugou') 配置文件说明 待添加 混淆过滤 #待添加 集成测试 如何判断sdk是否初始化成功？ 暂无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/jin-li.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/jin-li.html","title":"金立","summary":"金立","keywords":"","body":"金立 模块引入 implementation WB.fixVersions('Pay:Amigo') 配置文件说明 待添加 混淆过滤 #待添加 集成测试 如何判断sdk是否初始化成功？ 暂无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/an-zhi.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/an-zhi.html","title":"安智","summary":"安智","keywords":"","body":"安智 模块引入 implementation WB.fixVersions('Pay:AnzhiPay') 配置文件说明 待添加 混淆过滤 #待添加 集成测试 如何判断sdk是否初始化成功？ 暂无 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/tecent.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/tecent.html","title":"YSdk","summary":"腾讯YSDK","keywords":"","body":"YSdk 模块引入 本地引入，模块下载地址：http://192.168.1.252:8080/zip/?r=VigameAndroidLibrary.git&p=libPay/libPayExt_YSDK&h=master&format=zip setting.gradle中添加 include ':libPayExt_YSDK' project(':libPayExt_YSDK').projectDir = new File('目录\\\\libPayExt_YSDK') app目录build.gradle中修改： xxxximplementation project(':libPayExt_YSDK') Manifest参数选项 参数 说明 备注 eg： build.gradle中需添加 manifestPlaceholders = [ QQ_APP_ID:\"游戏的QQAPPID\", WX_APP_ID:\"游戏的微信APPID\", ... ] 配置文件说明 在包名目录下添加 .wxapi 包名，然后添加WXEntryActivity.java文件， 文件内容为 public class WXEntryActivity extends com.tencent.ysdk.module.user.impl.wx.YSDKWXEntryActivity { } assets 目录需添加 ysdkconf.ini文件 ;**************游戏相关配置, 游戏需要根据各自情况修改 START ********** ;游戏的QQAPPID QQ_APP_ID= qq appid ;游戏的微信APPID WX_APP_ID=微信appid ;游戏的OFFER_ID OFFER_ID= qq appid ;***************游戏配置项, 游戏需要根据各自情况修改 END ************** ;************* YSDK相关配置项,游戏需要根据各自情况修改 START ********** ;联调环境 ;YSDK_URL=https://ysdktest.qq.com ;正式环境 YSDK_URL=https://ysdk.qq.com ;************** YSDK相关配置项,游戏需要根据各自情况修改 END ************** 如果用 ysdk支付需注意： assets 目录需添加 feedata_ysdk.xml文件 米大师支付key ... 混淆过滤 -optimizationpasses 5 # 指定代码的压缩级别 -dontusemixedcaseclassnames # 指定代码的压缩级别 -dontskipnonpubliclibraryclasses # 是否混淆第三方jar -dontpreverify # 混淆时是否做预校验 -dontoptimize -ignorewarning # 忽略警告，避免打包时某些警告出现 -verbose # 混淆时是否记录日志 -optimizations !code/simplification/arithmetic,!field/*,!class/merging/* # 混淆时所采用的算法 -keep public class * extends android.app.Activity -keep public class * extends android.app.Application -keep public class * extends android.app.Service -keep public class * extends android.content.BroadcastReceiver -keep public class * extends android.content.ContentProvider -keep public class * extends android.app.backup.BackupAgentHelper -keep public class * extends android.preference.Preference -keep public class com.android.vending.licensing.ILicensingService -keepclasseswithmembernames class * { native ; } -keepclasseswithmembernames class * { public (android.content.Context, android.util.AttributeSet); } -keepclasseswithmembernames class * { public (android.content.Context, android.util.AttributeSet, int); } -keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); } -keep class * implements android.os.Parcelable { public static final android.os.Parcelable$Creator *; } -keepattributes InnerClasses -keep class com.tencent.bugly.**{*;} -keep class com.tencent.stat.**{*;} -keep class com.tencent.smtt.**{*;} -keep class com.tencent.beacon.**{*;} -keep class com.tencent.mm.**{*;} -keep class com.tencent.apkupdate.**{*;} -keep class com.tencent.tmassistantsdk.**{*;} -keep class org.apache.http.** { * ;} -keep class com.qq.jce.**{*;} -keep class com.qq.taf.**{*;} -keep class com.tencent.connect.**{*;} -keep class com.tencent.map.**{*;} -keep class com.tencent.open.**{*;} -keep class com.tencent.qqconnect.**{*;} -keep class com.tencent.mobileqq.**{*;} -keep class com.tencent.tauth.**{*;} -keep class com.tencent.feedback.**{*;} -keep class common.**{*;} -keep class exceptionupload.**{*;} -keep class mqq.**{*;} -keep class qimei.**{*;} -keep class strategy.**{*;} -keep class userinfo.**{*;} -keep class com.pay.**{*;} -keep class com.demon.plugin.**{*;} -keep class com.tencent.midas.**{*;} -keep class oicq.wlogin_sdk.**{*;} -keep class com.tencent.ysdk.**{*;} -keepclasseswithmembernames class * { native ; } -dontwarn java.nio.file.Files -dontwarn java.nio.file.Path -dontwarn java.nio.file.OpenOption -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement 集成测试 如何判断sdk是否初始化成功？ 待添加 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/san-xing.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/san-xing.html","title":"三星","summary":"三星","keywords":"","body":"三星 模块引入 implementation WB.fixVersions('Pay:Samsung') Manifest参数选项 参数 说明 备注 eg： 配置文件说明 待添加 混淆过滤 待添加 集成测试 如何判断sdk是否初始化成功？ 待添加 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/mei-zu.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/mei-zu.html","title":"魅族","summary":"魅族","keywords":"","body":"魅族 模块引入 本地引入，模块下载地址：http://192.168.1.252:8080/zip/?r=VigameAndroidLibrary.git&p=libPay/libPayExt_Meizu&h=master&format=zip setting.gradle中添加 include ':libPayExt_Meizu' project(':libPayExt_Meizu').projectDir = new File('目录\\\\libPayExt_Meizu') app目录build.gradle中修改： xxxximplementation project(':libPayExt_Meizu') 配置文件说明 assets目录加入feedata_meizu.xml 3227804 8a5e3ccb238e4b0aa9bb09eda9b97617 QaZmRVJiEDd0Up3m1SdlbkgmfOTTN1ph 1101 1 30赠25枚钻石 混淆过滤 -keep class com.meizu.** -keep class com.meizu.**{*;} 集成测试 如何判断sdk是否初始化成功？ 游戏打开会有魅族的悬浮按钮 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/sougou.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/qu-dao-jie-ru-can-kao/sougou.html","title":"搜狗","keywords":"","body":"搜狗 SouGou implementation WB.fixVersions('Pay:SouGou') Manifest参数选项 参数 说明 备注 eg： 配置文件说明 待添加 混淆过滤 待添加 集成测试 如何判断sdk是否初始化成功？ 待添加 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tui-song-jie-ru-can-kao/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tui-song-jie-ru-can-kao/","title":"推送接入参考","keywords":"","body":"推送接入参考 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tui-song-jie-ru-can-kao/oppo-tui-song.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tui-song-jie-ru-can-kao/oppo-tui-song.html","title":"OPPO推送","keywords":"","body":"OPPO推送 模块引入 xxx_Implementation WB.fixVersions('Push:Oppo') 添加混淆 # OPPO 推送 -dontwarn com.coloros.mcssdk.** -keep class com.coloros.mcssdk.** { *; } 注意事项 确保包名、参数正确，AppKey，AppSecret是配置在 feedata_oppo.xml 中的 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tui-song-jie-ru-can-kao/umeng-tui-song.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/tui-song-jie-ru-can-kao/umeng-tui-song.html","title":"Umeng推送","keywords":"","body":"Umeng推送 模块引入 xxx_Implementation WB.fixVersions('Push:UMeng') 其他注意事项 须在工程根目录的build.gradle中添加 buildscript { repositories { ... maven { url 'https://dl.bintray.com/umsdk/release' } } } allprojects { repositories { ... maven { url 'https://dl.bintray.com/umsdk/release' } } } 测试需注意事项 Manifest.xml文件中的包名需是推送后台配置的包名 或者 在 assets 目录创建UPH.xml文件，内容如下： com.wb.gzsj2 如果要带参数，须在自定义行为中填写如：101=60，5=10 android端没有使用到自定义参数功能 如果收不到推送，优先检查通知权限是否开启，如果开启，可以看 UMengAgent 的tag的日志，查看是否注册成功 点击推送信息无法打开应用时，将发送策略的后续动作改为 自定义行为，参数可写任意数字字符。 如需使用厂商通道，发送时需在系统通道配置打开指定页面及游戏启动页（一般为 com.libVigame.VigameStartActivity）。 华为厂商通道需 SHA256证书指纹 和 app的指纹一样 验收标准 在通知权限打开的情况下，能正常收到推送通知，点击通知能正常打开游戏，如果有传递奖励道具，道具应能正常到账 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/","title":"社交接入参考","keywords":"","body":"社交接入参考 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/qq.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/qq.html","title":"QQ","keywords":"","body":"QQ "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/mi-da-shi.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/mi-da-shi.html","title":"米大师","keywords":"","body":"米大师 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/uc.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/uc.html","title":"UC","keywords":"","body":"UC "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/dang-le.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/dang-le.html","title":"当乐","keywords":"","body":"当乐 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/qihoo.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/qihoo.html","title":"Qihoo","keywords":"","body":"Qihoo "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/wei-xin.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/wei-xin.html","title":"微信","keywords":"","body":"微信 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/facebook.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/she-jiao-jie-ru/facebook.html","title":"Facebook","keywords":"","body":"Facebook 模块引入 implementation WB.fixVersions('Social:Facebook'） Manifest参数选项 需要配置三个参数，其中两个参数的值一样，但是配置的方式不一样 参数 说明 备注 facebook_app_id 在facebook上申请的appId eg：344465672947670 Fb_share_appId 在facebook上申请的appId，用于分享 eg：344465672947670 fb_login_protocol_scheme fb+在facebook上申请的appId,用于登录 eg：fb344465672947670 配置文件说明 1.需要在app的build.gradle的manifestPlaceholders中设置“Fb_share_appId”的值,示例如下： android { compileSdkVersion 28 buildToolsVersion '28.0.3' publishNonDefault true defaultConfig { manifestPlaceholders = [ .... Fb_share_appId:\"370338263768260\", ... ] } } 2.需要在res/values/strings.xml目录下添加：(\"344465672947670\"是你的faceAPPId) 370338263768260 fb370338263768260 混淆过滤 -keep class com.facebook.**{*;} fb登录需注意 需在mac电脑生成密钥散列，命令如下 keytool -exportcert -alias YOUR_RELEASE_KEY_ALIAS -keystore YOUR_RELEASE_KEY_PATH | openssl sha1 -binary | openssl base64 window系统生成的密钥散列有问题，需注意不要用window生成 "},"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/app-jie-ru.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/mo-kuai-kuo-zhan/app-jie-ru.html","title":"app SDK接入参考","keywords":"","body":"app SDK接入参考 1.0 引入模块 xxximplementation WB.fixVersions('Proxy:APP') 1.1 初始化(application中调用) AppCore.init(application); 1.2 生命周期接口（activity中对应生命周期调用） AppCore.onPause(); AppCore.onResume(); 1.3 设置服务器数据获取成功的回调 AppCore.setCfgLoadCallBack(CfgLoadedCallBack); CfgLoadedCallBack void onResult(int type) 参数： type： //AppCore.CTYPE_MM //AppCore.CTYPE_AD //AppCore.CTYPE_XYX //AppCore.CTYPE_GAME //AppCore.CTYPE_SPLASH 回调返回成功后调用获取接口才能取到数据 示例： AppCore.getInstance().setCfgLoadCallBack(new AppCore.CfgLoadedCallBack() { @Override public void onResult(int type) { if(type == AppCore.CTYPE_AD) { ADConfig adcfg = AppCore.getInstance().getAdConfig(); if(adcfg !=null) { Log.d(TAG, \" adcfg = \"+ adcfg.getSourceList().toString()); } } else if(type == AppCore.CTYPE_XYX) { XYXConfig xyxCfg = AppCore.getInstance().getXyxConfig(); if(xyxCfg !=null) { Log.d(TAG, \" xyxCfg = \"+ xyxCfg.getItemList().toString()); } } } }); 1.4 获取配置的常用接口 /** * 获取广告配置 * 返回类型 ADConfig **/ AppCore.getInstance().getAdConfig(); /** * 获取 互推配置 * 返回类型 XYXConfig **/ AppCore.getInstance().getXyxConfig(); /** * 获取 游戏配置 **/ AppCore.getInstance().getGameConfig(); 1.5 互推上报接口 /** * 展示上报 **/ AppCore.getInstance().getXyxConfig().exposureShow(XYXItem item); /** * 点击上报 **/ AppCore.getInstance().getXyxConfig().exposureClick(XYXItem item); 1.6 native常用接口 import com.temp.proxy.AppNative; //自定义事件，需初始化后调用 AppNative.nativeOnEvent(String key); //自定义事件，需初始化后调用 AppNative.nativeOnEventLabel(String key,String val); //自定义事件，需初始化后调用。map 中 key 和 value 都不能含有 '=' 和 ',' AppNative.nativeOnEventMap(String key, HashMap map) //账号登录 暂时不可用 AppNative.nativeOnSignIn(String account,String acountType); // 账号登出 暂时不可用 AppNative.nativeOnSignOut(); //设置用户等级 AppNative.nativeSetUserLevel(int lv); // 开始关卡 AppNative.nativeStartLevel(String lv); //退出关卡 需和开始关卡成对出现 AppNative.nativeExitLevel(String lv); //通过关卡 需和开始关卡成对出现 AppNative.nativeFinishLevel(String level,String score); //关卡失败 需和开始关卡成对出现 AppNative.nativeFailLevel(String level,String score); /** * 支付统计 * money 人民币价格 * coin 虚拟币 * source 支付方式 **/ AppNative.nativePay(double money,int coin,int source); /** * 支付统计 * money 人民币价格 * item 道具名 * 道具数量 * 道具价格 * 支付方式 **/ AppNative.nativePay2(double money,int coin,int source); //log 开关，默认为true AppNative.nativeSetLogEnabled(boolean enableLog); //获取 MM 协议返回数据 字符串 AppNative.nativeGetMMChl(); //获取广告配置 字符串 AppNative.nativeGetADCfg(); //获取互推配置 字符串 AppNative.nativeGetXYXCfg(); //获取游戏配置 字符串 AppNative.nativeGetGameCfg(); //从服务器获取游戏配置 AppNative.nativeGetNetGameCfg(String ver); //更新 MM协议配置 AppNative.nativeUpdateMMChl(); //更新 广告配置 AppNative.nativeUpdateADCfg(); //更新 互推配置 AppNative.nativeUpdateXYXCfg(); 1.7 获取应用参数 channel 配置 name为 com.app.sdk.channel 项目id 配置 name为 com.app.sdk.prjid appid 配置 name为 com.app.sdk.appid appkey 配置 name为 com.app.sdk.appkey import com.temp.proxy.AppUtils; //获取应用名称 AppUtils.getAppName(); //获取包名 AppUtils.get_package_name(); //获取渠道名 配置 meta-data name 为 com.app.sdk.channel AppUtils.getChannel(); //获取项目ID 配置 meta-data name 为 com.app.sdk.prjid AppUtils.get_prjid(); //获取产品id 配置 meta-data name 为 com.app.sdk.appid AppUtils.get_appid(); //获取产品appkey配置 meta-data name 为 com.app.sdk.appkey AppUtils.get_appkey(); //获取app版本 AppUtils.get_app_ver(); //获取imei AppUtils.get_imei(); //获取网络状态 (0-无网络 1-手机网络 2-wifi网络 3-以太网络 4-蓝牙网络) AppUtils.get_net_state(); "},"cn/ke-hu-duan-jie-ru/android-jie-ru/chang-jian-wen-ti.html":{"url":"cn/ke-hu-duan-jie-ru/android-jie-ru/chang-jian-wen-ti.html","title":"常见问题","keywords":"","body":"常见问题 1.接入类 1.1 我的游戏应该接入哪些功能？解答：接入文档中所有标记“必接”的接口都需要接入。如含有计费功能还需要接入PayNative.orderPay购买接口。其他接口是否接入由项目运营人员视情况而定。 1.2 sdk接入成功后需要提供什么？解答：SDK接入成功后，先提供测试apk给我们验收，验收通过后提供完整的Android工程文件。 2.广告类 2.1 如何测试广告？解答：使用demo中的包名和产品参数，并在build.gradle中引入广告补丁，即可进行测试。注意：更换包名或产品参数，将可能导致广告加载失败。 2.2 为什么我的广告位名称无法展现广告？解答：因为每个项目所用到的广告位名称有所区别。为了保证测试有效性，建议前期测试时使用Demo中的广告位名称，以下常用广告位名称可直接出广告： 名称 广告类型 banner 横幅 home 插屏 pause 插屏 exit_game 插屏 level_restart 插屏 level_fail 插屏 level_win 插屏 game_win 插屏 game_fail 插屏 game_pause 插屏 level_fail_mfzs 视频 rotary_mfzs 视频 home_mfzs 视频 gift_mfzs 视频 double_fail_mfzs 视频 dj_mfzs 视频 double_mfzs 视频 item_mfzs 视频 sign_game 视频 其他广告位名称，可能无法出广告。只需保证正确调用即可。 2.3 开屏(splash)和唤醒(game_awaken)广告，如何埋点？ 解答：这两个广告位名称无需做埋点，按照SDK接入流程正常接入即可自动触发。 2.4 原生广告是什么？如何埋点？解答：原生广告是指能与游戏自身UI融为一体，不打断游戏操作的广告。可以理解为能自定义大小和位置的横幅广告。埋点与普通广告类似，只是需要特别传入尺寸和位置参数。例如： ADNative.openAd(\"yuans\", width, height, x, y); 建议原生广告的尺寸宽高比设置为： 690:388 3.计费类 3.1 如何测试计费?解答：因为微信支付限制较多，建议使用支付宝测试。首先确保在build.gradle中引入支付宝计费补丁；然后注意assets目录中需要放置ConfigPay.xml和feeedata_ali.xml文件，其中feedata_ali.xml的内容根据游戏计费设置自行配制； 最后通过调用orderPay接口即可进行支付。 3.2如何测试微信计费？解答：跟支付宝类似，首先确保在build.gradle中引入微信计费补丁； 然后注意assets目录中需要放置ConfigPay.xml和feeedata_wx.xml文件，其中feedata_wx.xml的内容根据游戏计费设置自行配制。因微信支付限制较多，以下几点需要特别注意： 包名需使用申请微信支付能力时的包名。 签名需使用申请能力时的签名，一般情况下为我方签名。可联系我方技术人员协助签名。 需要在真实包名文件路径下放置wxapi/WXPayEntryActivity.java文件，可参考demo。 "},"cn/ke-hu-duan-jie-ru/ios-jie-ru/":{"url":"cn/ke-hu-duan-jie-ru/ios-jie-ru/","title":"iOS","keywords":"","body":"iOS 1. MacApp自动集成 2. 脚本构建 3. CocoaPods集成 4. 常见问题 "},"cn/ke-hu-duan-jie-ru/ios-jie-ru/jiao-ben-gou-jian.html":{"url":"cn/ke-hu-duan-jie-ru/ios-jie-ru/jiao-ben-gou-jian.html","title":"脚本构建","keywords":"","body":"脚本构建 1.cd当前工程目录 cd /User/XXXX 2.下载Vigame资源 2.1 执行clone命令下载 git clone https://github.com/hohua88/Vigame.git 2.2 手动下载 地址 3.执行auto.sh脚本 ./Vigame/auto.sh a03cfead89f5934d #执行脚本 参数为singleid是必须 脚本执行完成后会上传到fir.im，之后会打开打包的文件夹，里面有个二维码图片，可以把这个图片给到测试下载。 "},"cn/ke-hu-duan-jie-ru/ios-jie-ru/cocoapods-ji-cheng.html":{"url":"cn/ke-hu-duan-jie-ru/ios-jie-ru/cocoapods-ji-cheng.html","title":"CocoaPods集成","keywords":"","body":"CocoaPods集成 1. CocoaPods添加KTMSDK 自动部署可以省去您工程配置的时间。iOS SDK会通过CocoaPods进行发布，推荐您使用自动部署。 安装CocoaPods CocoaPods是一个Swift和Objective-C项目的依赖管理器。它拥有超过49,000个第三方库，超过3,000,000个app都在使用cocoaPods做依赖管理，CocoaPods可以帮助你优雅的扩展你的项目。 如果您未安装过cocoaPods，可以通过以下命令行进行安装。更多详情请访问CocoaPods官网。 $ sudo gem install cocoapods 注意：安装过程可能会耗时比较长，也有可能收到网络状况导致失败，请多次尝试直到安装成功。 配置Podfile文件 在您的工程文件所在文件夹下有一个名为Podfile的文件。如果您第一次使用CocoaPods，可以在通过以下命令初始化一个Podfile文件： $ pod init 打开Podfile文件，应该是如下内容（具体内容可能会有一些出入）： 更具需求单pod需要接入的功能 source 'http://wy@dnsdk.vimedia.cn:8080/r/IOSMavenSpec.git' #远程私有库地址 source 'https://cdn.cocoapods.org/' #公有库地址 platform :ios, '9.0' target 'YourTargenname' do sdkVersion='2.0.4' ####--基础功能---### pod 'KTMSDK/KTMSDK',sdkVersion pod 'KTMSDK/Common',sdkVersion ####--广告---### pod 'KTMSDK/Ads/Bytedance',sdkVersion pod 'KTMSDK/Ads/Ironsource',sdkVersion pod 'KTMSDK/Ads/Admob',sdkVersion pod 'KTMSDK/Ads/GDT',sdkVersion pod 'KTMSDK/Ads/Unity',sdkVersion pod 'KTMSDK/Ads/Mintegral',sdkVersion pod 'KTMSDK/Ads/Facebook',sdkVersion pod 'KTMSDK/Ads/Applovin',sdkVersion pod 'KTMSDK/Ads/KTMAd',sdkVersion pod 'KTMSDK/Ads/Vungle',sdkVersion pod 'KTMSDK/Ads/Sigmob',sdkVersion pod 'KTMSDK/Ads/Kuaishou',sdkVersion ####--统计---### pod 'KTMSDK/Analysis/Umeng',sdkVersion pod 'KTMSDK/Analysis/TrackingIO',sdkVersion pod 'KTMSDK/Analysis/ByteDance',sdkVersion pod 'KTMSDK/Analysis/Appsflyer',sdkVersion pod 'KTMSDK/Analysis/Facebook',sdkVersion pod 'KTMSDK/Analysis/Adjust',sdkVersion pod 'KTMSDK/Analysis/Tenjin',sdkVersion pod 'KTMSDK/Analysis/Google',sdkVersion ####--社交（登录）---### pod 'KTMSDK/Social/Wechat',sdkVersion pod 'KTMSDK/Social/Facebook',sdkVersion pod 'KTMSDK/Social/Apple',sdkVersion ####--扩展---### pod 'KTMSDK/Extension/Bugly',sdkVersion ####--内购---### pod 'KTMSDK/IAP',sdkVersion end 注：ironsource聚合广告需单独导入 #IronSource 聚合广告按需添加 pod 'IronSourceAdMobAdapter','4.3.17.1' pod 'IronSourceFacebookAdapter','4.3.21.0' pod 'IronSourceUnityAdsAdapter','4.3.6.0' pod 'IronSourcePangleAdapter','4.1.10.0' pod 'IronSourceAppLovinAdapter','4.3.20.0' 2.下载Vigame资源 Vigame资源包含构建脚本、出包证书及打包依赖的plist文件,可以使用里面证书出测试包,证书密码：123456 Vigamne下载 3.工程配置 3.1. 添加必要配置 打开 Capabilities-> Keychain Sharing 获取设备唯一标识 在info.plist添加Google广告配置 GADIsAdManagerApp：YES 如果出海外包带有Facebook广告 需要在info.plist文件中添加Facebook 中相关的配置如下： 设置Enable BitCode 为NO 苹果新出的规定无论有没有使用到相机相册都得申请 权限 游戏需要访问网络 需要有网络权限 游戏第三方可能会用到定位，所有游戏info.plist添加NSLocationWhenInUseUsageDescription 3.2. 接入微信配置（不接入忽略） 在info.plist文件添加 添加微信登陆URL Type 4. SDK初始化工作 注：使用DN_PLUGIN_UNITY_1.x.unitypackage插件可忽略初始化配置 1. 导入头文件 在appDelegate文件中引入头文件#import 2. 调用初始化入口文件 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { [super application:application didFinishLaunchingWithOptions:launchOptions]; [IOSLoader application:application DidFinishLaunchingWithOptions:launchOptions]; [IOSLoader openSplash]; return YES; } - (void)applicationDidBecomeActive:(UIApplication *)application { [super applicationDidBecomeActive:application]; [IOSLoader applicationDidBecomeActive:application]; } - (void)applicationDidEnterBackground:(UIApplication *)application { [super applicationDidEnterBackground:application]; [IOSLoader applicationDidEnterBackground:application]; } - (void)applicationWillEnterForeground:(UIApplication *)application { [super applicationWillEnterForeground:application]; [IOSLoader applicationWillEnterForeground:application]; } - (void)applicationWillTerminate:(UIApplication *)application { [super applicationWillTerminate:application]; [IOSLoader applicationWillTerminate:application]; } - (BOOL)application:(UIApplication*)app openURL:(NSURL*)url options:(NSDictionary*)options { [super application:app openURL:url options:options]; [IOSLoader application:app openURL:url options:options]; return YES; } - (BOOL)application:(UIApplication*)application willFinishLaunchingWithOptions:(NSDictionary*)launchOptions { [super application:application willFinishLaunchingWithOptions:launchOptions]; [IOSLoader splashReport]; return YES; } - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void (^)(NSArray> * _Nullable))restorationHandler { [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler]; return [IOSLoader application:application continueUserActivity:userActivity restorationHandler:restorationHandler]; } 交互流程 我们提供一个测试包名和证书（已上线的项目#为了能出广告#） 使用测试包名和证书出一个测试包--然后测试 测试完成后 换正式包名和证书出正式包上传苹果商店 "},"cn/ke-hu-duan-jie-ru/ios-jie-ru/chang-jian-wen-ti.html":{"url":"cn/ke-hu-duan-jie-ru/ios-jie-ru/chang-jian-wen-ti.html","title":"常见问题","keywords":"","body":"常见问题 1.接入类 1.1 我的游戏应该接入哪些功能？ 解答： 接入文档中所有标记“必接”的接口都需要接入。其他接口是否接入由项目运营人员视情况而定。 1.2 sdk接入成功后需要提供什么？ 解答： SDK接入成功后，先提供测试apk给我们验收，验收通过后提供完整的Android工程文件。 2.广告类 2.1 如何测试广告？ 解答： 使用demo中的包名和产品参数，并在build.gradle中引入广告补丁，即可进行测试。注意：更换包名或产品参数，将可能导致广告加载失败。 2.2 为什么我的广告位名称无法展现广告？ 解答： 因为每个项目所用到的广告位名称有所区别。为了保证测试有效性，建议前期测试时使用Demo中的广告位名称，以下常用广告位名称可直接出广告： 名称 广告类型 banner 横幅 home 插屏 pause 插屏 exit_game 插屏 level_restart 插屏 level_fail 插屏 level_win 插屏 game_win 插屏 game_fail 插屏 game_pause 插屏 level_fail_mfzs 视频 rotary_mfzs 视频 home_mfzs 视频 gift_mfzs 视频 double_fail_mfzs 视频 dj_mfzs 视频 double_mfzs 视频 item_mfzs 视频 sign_game 视频 其他广告位名称，可能无法出广告。只需保证正确调用即可。 2.3 开屏(splash)和唤醒(game_awaken)广告，如何埋点？ 解答： 这两个广告位名称无需做埋点，按照SDK接入流程正常接入即可自动触发。 2.4 原生广告是什么？如何埋点？ 解答： 原生广告是指能与游戏自身UI融为一体，不打断游戏操作的广告。可以理解为能自定义大小和位置的横幅广告。 埋点与普通广告类似，只是需要特别传入尺寸和位置参数。例如： [IOSLoader openYSBanner:@\"yuans\" rect:CGRectMake(x, y, width, height)]; 3.常见错误 3.1 在info.plist添加Google广告配置 GADIsAdManagerApp：YES不配置会出现崩溃 解决方式： 3.2 Google广告由于用xib自动布局，需要最低iOS9版本会报如下错误 解决方式： 3.3缺少include文件配置报错 解决方式： 3.4 缺少include中boost文件引入错误 解决方式： 3.5 weak typeof(self)wSelf = self报错： A parameter list without types is only allowed in a function definition. A corresponding warning tells me that** weak only applies to Objective-C object or block pointer types;type here is 'int' 解决方式： Xcode－> Build Settings-> C Language Dialect修改配置，C99改为GNU99，C99不包含typeof 3.6.确认c++ 编译项 解决方式： "},"cn/ke-hu-duan-jie-ru/unitnit-game/":{"url":"cn/ke-hu-duan-jie-ru/unitnit-game/","title":"Unity","keywords":"","body":"Unity Demo工程克隆地址 ： Unity工程： git clone http://dnsdk.vimedia.cn:8080/r/UnityDemo.git Android Studio 工程： git clone http://dnsdk.vimedia.cn:8080/r/UnityDemo-Android.git Android 多渠道模板工程：（仅供内部使用） git clone http://192.168.1.252:8080/r/android/UnityDemo-Android-Ex.git Xcode 工程： git clone http://dnsdk.vimedia.cn:8080/r/UnityDemo-IOS.git 导入Unity插件 插件下载 将UniWb.Wb.unitypackage导入成功后，在资源管理界面中会出现名为Streanming与Wb两个文件夹。 StreamingAssets/st.txt 保存的是签名的信息。 Wb 文件夹存放业务接口，主要有 ADManger , CoreManger, PayManger, ToolManger, XyxManger等。 接口使用 参考业务接口进行接入： 业务接口 Android 接入 1.添加Android相关模块 参考以下链接进行接入： Android 请跳过链接页面中第五步的第2条，因为后面已使用Activity继承代替。 2.在 build.gradle 中加入Unity桥接模块 implementation WB.fixVersions('Bridge:UnityBridge') 3.将主Acitivy继承UniWbActivity或者将UniWbActivity作为主Activity。 package org.vigame.demo; import android.os.Bundle; import com.vigame.unitybridge.UniWbActivity; public class AppActivity extends UniWbActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); } } UniWbActivity已经继承UnityPlayerActivity iOS 接入 1.添加iOS相关模块 参考以下链接进行接入： iOS "},"cn/ke-hu-duan-jie-ru/unitnit-game/qian-ming-yan-zheng.html":{"url":"cn/ke-hu-duan-jie-ru/unitnit-game/qian-ming-yan-zheng.html","title":"签名验证","keywords":"","body":"签名验证 参考该链接： https://vimedia.feishu.cn/docs/doccnLMSPIRhpB3rhbqYnlhPgTc#imY8ih "},"cn/ke-hu-duan-jie-ru/unitnit-game/hu-tui-shi-yong.html":{"url":"cn/ke-hu-duan-jie-ru/unitnit-game/hu-tui-shi-yong.html","title":"互推使用","keywords":"","body":"互推使用 导入 UniWb.Wb.unitypackage 后， 在 Wb/Xyx/prefab/ 文件夹下可以找到不同的互推样式。 视频类型的请使用PushHotItem，如图示中大的互推。 icon类型的互推使用 PushIconItem 预制体，如图示中底部的四个。 将预制体拖入 canvas 即可。 在打包安卓时 需使用 112234 项目id 测试。 隐藏 互推要使用 PushItem 中的 SetVisible 接口 （重要） 不能自己隐藏 若在有的手机上无法正常显示，查看 Project Serrings-> Other Settings-> Auto Graphics API 是否勾选 （需要勾选） "},"cn/ke-hu-duan-jie-ru/unitnit-game/cha-jian-xia-zai.html":{"url":"cn/ke-hu-duan-jie-ru/unitnit-game/cha-jian-xia-zai.html","title":"插件下载","keywords":"","body":"插件下载 最新版本 版本：v1.4.6-beta 发布时间：2020-1-25 下载 接口调整：增加震动时间接口；原生广告接口调整为OpenYsAd UnityEditor支持使用新模块打包 UnityEditor支持【打包并运行】 版本：v1.4.4 发布时间：2020-12-25 下载 原生广告老接口实现保持不变，增加新的原生广告接口 将prefab目录调整到外层 版本：v1.4.3 发布时间：2020-12-23 下载 修复Unity新老版本判断问题 补充部分ios缺失的接口实现 修复图片互推展示问题 修复签名验证可能无效问题 版本：v1.4.1 发布时间：2020-12-15 下载 互推支持marketplus打开方式 增加打包工具生成apk后自动重命名 增加sdk签名验证事件打点：dn_checksign_start/dn_checksign_succ/dn_checksign_fail 修复原生广告渲染区域限制在画布内 版本：v1.4.0 发布时间：2020-11-11 下载 支持安卓导出时自定义替换内容（Assets\\Wb\\Editor\\Platform\\Android\\sourceSets） 增加iOS导出时可自动添加对接代码 Editor工具取消导入配置过程 正式版本 版本：v1.3.2 发布时间：2020-10-27 下载 增加Android构建和Android打包功能，提升打包效率 修复视频播放失败导致游戏静音的问题 默认使用新版广告模块 配置工具支持替换appid、appkey 版本：v1.2.0 发布时间：2020-9-17 下载 增加Vigame参数配置功能 增加支付相关配置功能 支持自动生成微信相关Entry文件 增加支付相关配置功能 去掉插件中包含的多余内容（闪屏图片、plugin/Android资源等） 版本：v1.1 发布时间：2020-8-12 下载 修复Unity打包工具在Unity2018上读取不到string而崩溃的问题； 支持修改渠道号功能； 支持华为包可自动引入插件和替换配置ag-service-connect.json文件 支持小米广告包自动引入annotationProcessor 配置 支持打包iOS工程自动加入对接代码 增加快速选择测试配置功能 版本：v1.0 发布时间：2020-7-31 下载 初始版本 "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/","title":"业务接口","summary":"常用业务接口说明","keywords":"","body":"业务接口 1. 基础能力 2. 广告能力 3. 计费能力 4. 统计能力 5.扩展能力 6.社交能力 "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/1.-ji-chu-neng-li.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/1.-ji-chu-neng-li.html","title":"1.基础能力","keywords":"","body":"1.基础能力 1.1 初始化(必接) Android CoreNative.init(); iOS [IOSLoader application:application DidFinishLaunchingWithOptions:launchOptions]; 1.2 设置退出响应代码（仅限Android） Android（必接） PayNative.setGameExitCallback(Runnable runnable); 示例： PayNative.setGameExitCallback(new Runnable() { @Override public void run() { // TODO Auto-generated method stub CoreNative.gameExit();//该方法必须调用 currentActivity.finish(); System.exit(0); } }); 参数: runnable：退出执行的代码 1.3 调用退出（Android必接） Android PayNative.openExitGame(); 因游戏有自己的退出界面，建议按照如下方法判断： if(PayNative.isExitGame()){ //通过调用下面的方法弹出渠道的退出 PayNative.openExitGame(); } else{ //这里弹出引擎的退出界面 ... } Unity Wb.PayManager.Instance.OpenExitGame(); 示例： if (Wb.PayManager.Instance.IsSupportExit()) { //如果支持退出，则调用openExitGame接口 Wb.PayManager.Instance.OpenExitGame(); } else { //否则展示引擎的退出窗口 showEngineExit(); } 1.4 获取应用参数 Android import com.google.extra.platform.Utils; //获取应用名称 Utils.getAppName(); //获取包名 Utils.get_package_name(); //获取渠道名 Utils.getChannel(); //获取项目ID Utils.get_prjid(); //获取app版本 Utils.get_app_ver(); //获取imei Utils.get_imei(); //获取网络状态 (0-无网络 1-手机网络 2-wifi网络 3-以太网络 4-蓝牙网络) Utils.get_net_state(); iOS //获取应用名称 [IOSLoader getAppName]; //获取包名 [IOSLoader getPackageName]; //获取渠道名 [IOSLoader getChannel]; //获取项目ID [IOSLoader getPrjId]; //获取app版本 [IOSLoader getAppVersion]; //获取imei [IOSLoader getImei]; //获取网络状态(0-无网络 1-手机网络 2-wifi网络 3-以太网络 4-蓝牙网络) [IOSLoader getNetState]; Unity //获取包名 Wb.CoreManager.Instance.GetPackageName(); //获取渠道名 Wb.CoreManager.Instance.GetChannel(); //获取项目ID Wb.CoreManager.Instance.GetPrjid(); //获取app版本 Wb.CoreManager.Instance.GetVerName(); //获取imei Wb.CoreManager.Instance.GetImei(); //获取网络状态(0-无网络 1-手机网络 2-wifi网络 3-以太网络 4-蓝牙网络) Wb.CoreManager.Instance.GetNetState(); 1.5 获取自定义开关 Android ChnlManager.getValueForKey(String customKey); 示例： //获取审核开关，返回值：0-未审核 1-审核中 ChnlManager.getValueForKey(\"audit\"); iOS + (NSString *)selfDefineSwitch:(NSString *)customKey; 示例： [IOSLoader selfDefineSwitch:@\"audit\"] Unity Wb.CoreManager.Instance.GetCustomSwitch(string customKey) 示例： Wb.CoreManager.Instance.GetCustomSwitch(\"audit\") 参数： customKey：自定义键值 返回值：1-审核中 0-过审 "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/2.-guang-gao-neng-li.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/2.-guang-gao-neng-li.html","title":"2.广告能力","keywords":"","body":"2.广告能力 2.1 设置广告打开回调 Android ADNative.setAdResultCallback(AdParamCallback callback); 示例： //设置广告回调 ADNative.setAdResultCallback(new ADManager.AdParamCallback() { @Override public void onStatusChanged(ADParam arg0, int status) { // TODO Auto-generated method stub Log.d(TAG,\"onStatusChanged:\"+status); } @Override public void onRequestAddGameCoin(ADParam arg0, int arg1, int arg2, String arg3) { // TODO Auto-generated method stub Log.d(TAG,\"onRequestAddGameCoin\"); } @Override public void onOpenResult(ADParam adParam, int result) { // TODO Auto-generated method stub Log.d(TAG,\"onOpenResult:\"+result); //判断广告类型是否是视频 if(adParam.getType().equals(ADDef.AD_TypeName_Video)){ } if(result== ADParam.ADOpenResult_Success){//广告打开成功 } else {//广告打开失败 } } }); 回调方法说明：AdParamCallback .onOpenResult(onOpenResult(ADParam adParam , int result)) ：广告打开结果通知 adParam:广告相关参数（可获取广告ID，广告状态，广告代理商） result:广告打开结果：0成功 1失败 2取消 AdParamCallback.onRequestAddGameCoin(ADParam adParam, int result, int num, String reason)：积分墙类广告的钻石奖励通知 adParam:广告相关参数 result：奖励结果类型：0成功 1失败 2取消 num：奖励数量 reason：通知字符串 2.2 打开广告 2.2.1 打开普通广告（插屏/视频/横幅/开屏） Android ADNative.openAd(String adPositionName); iOS [IOSLoader openAd:@\"adPositioname\"]; [IOSLoader openAd:@\"adPositioname\" adCallback:^(BOOL flag, KTMADType type) { if (type == KTMADTypePlaque) { //插屏 } if (type == KTMADTypeVideo) { //视频 } }]; 回调方法说明： adCallback:^(BOOL flag, KTMADType type)：广告打开结果回调。 flag：true-打开成功 false-打开失败（插屏不需要处理flag）视 频下发奖励依据flag（flag为true下发奖励，flag为false不下发奖励） type ： KTMADTypePlaque（插屏），KTMADTypeVideo（视频） 因插屏和视频需要广告展示时关闭背景音，广告关闭时恢复背景音。故可根据type进行判断。 参数： adPositionName： 广告位名称 Unity Wb.ADManager.Instance.OpenAd(string adPositionName, Action callBackFun); 示例： Wb.ADManager.Instance.OpenAd(\"home_mfzs\", result => { if (result) { ShowToast(\"视频广告打开成功\", false); } else { ShowToast(\"视频广告打开失败\", true); } }); 参数： adPositionName： 广告位名称 callBackFun：广告打开回调 2.2.2 打开原生广告 Android ADNative.openYsAd(String adPositionName,int width, int height, int x, int y); 参数： adPositionName： 广告位名称 width：宽度，单位-像素 height：高度，单位-像素 x：左上角横坐标，单位-像素 y：左上角纵坐标，单位-像素 iOS [IOSLoader openYsAd:string width:int height:int x:int y:int]; 参数： adPositionName： 广告位名称 width：宽度，单位-像素 height：高度，单位-像素 x：左上角横坐标，单位-像素 y：左上角纵坐标，单位-像素 Unity Wb.ADManager.Instance.OpenYsAd(String adPositionName,int width, int height, int x, int y); 参数： adPositionName： 广告位名称 width：宽度，单位-像素 height：高度，单位-像素 x：左上角横坐标，单位-像素 y：左上角纵坐标，单位-像素 Wb.ADManager.Instance.OpenYsAd(RectTransform rect, string adPositionName); 参数： adPositionName： 广告位名称 rect：Unity的坐标区域 Wb.ADManager.Instance.OpenYsAd(string adPositionName, float width, float height, float x, float y, float winSizeW, float winSizeH); 参数： adPositionName： 广告位名称 width：设计分辨率宽度 height：设计分辨率高度 x：设计分辨率左上角横坐标 y：设计分辨率左上角纵坐标 winSizeW：设计分辨率屏幕宽度 winSizeH：设计分辨率屏幕高度 2.3 查看广告是否就绪 Android ADNative.isAdReady(String adPositionName); ADNative.isAdReady2(String adPositionName, String type); iOS [IOSLoader isAdReady:@\"adPositioname\"]; [IOSLoader isAdReady:@\"adPositioname\" type:@\"type\"]; Unity Wb.ADManager.Instance.IsAdReady(string adPositioname) 参数： adPositionName:广告位名称 type: 广告类型 (plaque-插屏 video-视频 banner-横幅 wall-积分墙 splash-开屏 msg-信息流广告) 2.4 关闭广告 Android ADNative.closeAd(String adPositioname); iOS [IOSLoader closeAd:@\"adPositioname\"]; Unity Wb.ADManager.Instance.CloseAd(string adPositioname); 参数： adPositionName： 广告位名称 2.5 获取视频限制次数 Android ADNative.getVideoLimitOpenNum(); iOS [IOSLoader getVideoLimitOpenNum]; Unity Wb.ADManager.Instance.GetVideoLimitOpenNum(); 返回值： 返回可播放次数，-1表示无限次。 2.6 广告位是否已打开（不推荐） Android ADNative.isAdOpen(String adPositionName); iOS [IOSLoader isAdOpen:@\"adPositionName\"]; 返回值： true-广告已被打开 false-广告未被打开 2.7 某关卡是否出现广告 Android ADNative.isAdBeOpenInLevel(String adPositionname,int lv); iOS [IOSLoader isAdBeOpenInLevel:@\"adPositionName\" level:lv]; Unity Wb.ADManager.Instance.IsAdBeOpenInLevel(string adPositionname,int lv); 参数： adPositionname：广告位名称 lv：关卡编号(1-无限) 返回值： true-可出现 false-不可出现 2.8 查询某种广告类型是否存在 Android ADNative.isAdTypeExist(String adType); iOS [IOSLoader isAdTypeExist:@\"adType\"]; Unity Wb.ADManager.Instance.IsAdTypeExist(string adType) 参数： adType：广告类型 （plaque-插屏 video-视频 banner-横幅 wall-积分墙 splash-开屏 msg-信息流广告） 返回值： true-存在 false-不存在 2.9 获取广告位控制参数 Android ADNative.getAdPositionParam(String positionName,String key); iOS [IOSLoader getAdPositionParam:@\"positionName\" valueName:@\"key\"] Unity Wb.ADManager.Instance.GetAdPositionParam(string positionName,string key); 参数： positionName-广告位名称 key-控制字段名称 返回值： key对应的value值 "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/3.-ji-fei-neng-li.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/3.-ji-fei-neng-li.html","title":"3.计费能力","keywords":"","body":"3.计费能力 3.1 设置支付回调 Android PayNative.setPayResultCallback(new PayManager.PayCallback() { @Override public void onPayFinish(PayParams params) { // TODO Auto-generated method stub switch (params.getPayResult()){ //支付成功 case PayDef.PAY_RESULT_SUCCESS: break; //支付失败 case PayDef.PAY_RESULT_FAIL: break; //取消支付 case PayDef.PAY_RESULT_CANCEL: break; } } @Override public void onInitPayAgentFinish(BasePayAgent arg0) { // TODO Auto-generated method stub } }); 回调方法说明： onPayFinish：支付结果回调 payParams：支付相关参数（可通过该参数获取支付结果、计费ID等信息） onInitPayAgentFinish：支付方式初始化成功 iOS [IOSLoader setPayResultCallback:^(NSDictionary *dic) { if ([[dic objectForKey:@\"reasonCode\"] integerValue] == 1) { //支付成功 } }]; 3.2 该市场是否支持退出（仅限Android） Android（必接） PayNative.isExitGame(); Unity Wb.PayManager.Instance.IsSupportExit(); 3.3 获取支付按钮类型 Android PayNative.getButtonType(payID); iOS [IOSLoader getButtonType]; Unity Wb.PayManager.Instance.GetButtonType(int payID); 3.4 获取所在的市场类型 Android PayNative.getMarketType(); iOS [IOSLoader getMarketType]; Unity Wb.PayManager.Instance.GetMarketType(); 3.5 获取礼包控制信息 Android PayNative.getGiftCtrlFlagUse(int ctrl); iOS [IOSLoader getGiftSwitch:ctrl]; Unity Wb.PayManager.Instance.GetGiftCtrlFlagUse(int ctrl) 参数： ctrl：控制参数 返回值： 控制参数 控制参数说明： 数值 礼包名称 弹出规则 1 新手礼包 进入游戏首页时如果没购买过新手礼包则弹出 2 快冲 用户虚拟货币不足时弹出 3 限时礼包 进入游戏首页时如果已经买过新手礼包则弹出 4 过关奖励 过关时弹出 5 vip礼包 进入关卡选择页时弹出 6 今日特价 按钮触发 7 实惠大礼包 按钮触发 8 商城 按钮触发 3.6 调用支付 Android PayNative.orderPay(id); orderPay(int id,String userdata); orderPay(int id,int price，String userdata); orderPay(int id, int price, int payType，String userdata); 如需使用微信支付，需要在assets目录放入feedata_wx.xml；如需支付宝，需要放入feedata_alipay.xml iOS [IOSLoader orderPay:id]; [IOSLoader orderPay:id userData:@\"userData\"]; [IOSLoader orderPay:id price:price userData:@\"userData\"]; [IOSLoader orderPay:id price:price type:payType userData:@\"userData\"]; //可直接调用此方法，默认已设置支付回调 [IOSLoader textPayWithProductId:payId userInfo:userInfo tradeIdCallBack:^(NSDictionary * _Nullable object) { // 订单id回调 NSString *tramsactionId = [object valueForKey:@\"transactionId\"]; } callBack:^(NSDictionary * _Nullable object) { if ([object[@\"reasonCode\"] integerValue] == 0) { // 购买成功 } if ([object[@\"reasonCode\"] integerValue] == 1) { // 购买失败 } }]; Unity Wb.PayManager.Instance.OrderPay(int id, Action callFun); Wb.PayManager.Instance.OrderPay(int id, string userData, Action callFun); Wb.PayManager.Instance.OrderPay(int id, int price, string userData, Action callFun); Wb.PayManager.Instance.OrderPayWithType(int id, int price, int payType,string userData, Action callFun) 示例： Wb.PayManager.Instance.OrderPay(1, (result, id) => { if (result.Equals(\"Paysuccess\")) { ShowToast(\"支付成功\", false); } else if (result.Equals(\"Payfail\")) { ShowToast(\"支付失败\", true); } else if (result.Equals(\"Paycancel\")) { ShowToast(\"支付取消\", false); } }); 参数： id:游戏中定义的计费点id price:计费点的价格，单位为分。 payType:指定的支付类型。eg:PayDef.PAY_TYPE_MM userdata:用户自定义数据 callFun:支付回调（仅Unity） 3.7 订单恢复（补发道具） iOS + (void)payConsumableGoodsRecoveryCallBack:(void (^)(NSDictionary *))callback; + (void)payConsumableGoodsRecoveryFinish:(NSString *)transactionId; 说明：用户上一次订单未成功发放道具或钻石，SDK会在下一次进入游戏时，主动回调订单信息 可以在这一步为用户恢复订单 方法需要在- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions方法中调用 使用： // 消耗型商品恢复 [IOSLoader payConsumableGoodsRecoveryCallBack:^(NSDictionary *dic) { int coin = [[NSUserDefaults standardUserDefaults] integerForKey:@\"coinKey\"]; [[NSUserDefaults standardUserDefaults] setInteger:(coin + 60) forKey:@\"coinKey\"]; [IOSLoader payConsumableGoodsRecoveryFinish:dic[@\"tradeId\"]]; int payPrice = [[dic valueForKey:@\"payPrice\"]intValue]; int payType = [[dic valueForKey:@\"payType\"] intValue]; [IOSLoader tj_payWithMoney:payPrice coin:60 source:payType]; NSString *message = [NSString stringWithFormat:@\"%@ \",dic]; UIAlertController* successAlert = [UIAlertController alertControllerWithTitle:@\"内购恢复成功 \" message:message preferredStyle: UIAlertControllerStyleAlert]; UIAlertAction *okAction = [UIAlertAction actionWithTitle:@\"OK\" style:UIAlertActionStyleCancel handler:NULL]; [successAlert addAction:okAction]; [self.window.rootViewController presentViewController:successAlert animated:YES completion:^{ }]; }]; 3.8 是否需要有更多游戏按钮 Android PayNative.isMoreGame(); Unity Wb.PayManager.Instance.IsMoreGameBtn(); 3.9 打开更多游戏 Android PayNative.openMoreGame(); Unity Wb.PayManager.Instance.OpenMoreGame(); 3.10 跳转应用商店的某个应用详情页 Android PayNative.openMarket(String package); iOS [IOSLoader jumpSomeApp:appid]; 参数： appid：跳转应用的id Unity Wb.PayManager.Instance.OpenMarket(string package); 参数： package：在Android平台为应用包名，在ios平台为应用id 3.10 跳转当前应用的商店详情页 Android PayNative.openAppraise(); iOS [IOSLoader openAppDetail]; Unity Wb.PayManager.Instance.OpenAppraise(); "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/4.-tong-ji-neng-li.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/4.-tong-ji-neng-li.html","title":"4.统计能力","keywords":"","body":"4.统计能力 4.1 自定义统计 Android TJNative.event(String eventId); TJNative.event(String eventId, String label); TJNative.event(String eventId, HashMap attributes); iOS [IOSLoader tj_name:@\"eventId\"]; [IOSLoader tj_name:@\"eventId\" value:@\"label\"]; [IOSLoader tj_name:@\"eventId\" map:@\"attributes\"]; Unity Wb.TjManager.Instance.TJCustomEvent(string eventId); Wb.TjManager.Instance.TJCustomEvent(string eventId, string label); Wb.TjManager.Instance.TJCustomEvent(string eventId, Dictionary attributes); 参数： eventId: 为当前统计的事件ID label：事件的标签属性 attributes:事件的多标签属性 4.2 关卡统计 Android TJNative.startLevel(String level);//开始关卡 TJNative.finishLevel(String level, String score);//过关成功 TJNative.failLevel(String level, String score);//过关失败 iOS [IOSLoader tj_startLevel:@\"level\"]; [IOSLoader tj_finishLevel:@\"level\"]; [IOSLoader tj_failLevel:@\"level\"]; Unity Wb.TjManager.Instance.StartLevel(string level); Wb.TjManager.Instance.FinishLevel(string level, string score); Wb.TjManager.Instance.FailLevel(string level, string score); 参数： level：关卡名称 score：关卡得分，可传空 注意事项： 成对出现， finishLevel 和 failLevel 的level值一定要是startLevel传的level值 4.3 充值统计 4.3.1 统计充值成功 Android TJNative.pay(double money, double coin, int source); iOS [IOSLoader tj_payWithMoney:money coin:coin source:source]; Unity Wb.TjManager.Instance.TJPay(double money,double coin, int source); 参数： money：金额，单位元 coin：买到的钻石数 source：充值渠道标识（使用PayNative.getDefaultPayType获取） 4.3.2 统计充值并购买道具 Android TJNative.pay(double money, String item, int number, double price, int source); iOS [IOSLoader tj_payWithMoney:money productId:item number:number price:price score:score]; Unity Wb.TjManager.Instance.TJPayAndBuy(double money,string item,int number,double price, int source) 参数： money:金额，单位元 item:买到的道具名称 number：买到的道具数量 price：买到的道具价值 source：充值渠道标识（使用PayNative.getDefaultPayType获取） 4.4 页面统计 Android TJNative.onPageStart(String sid); TJNative.onPageEnd(String sid); iOS [IOSLoader tj_onPageStart:@\"sid\" ]; [IOSLoader tj_onPageEnd:@\"sid\" ]; Unity Wb.TjManager.Instance.onPageStart(string sid); Wb.TjManager.Instance.onPageEnd(string sid); 参数： sid:页面名称 注意事项： 成对出现， onPageEnd传的sid值一定要是onPageStart传的sid值 "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/5.-kuo-zhan-neng-li.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/5.-kuo-zhan-neng-li.html","title":"5.扩展能力","keywords":"","body":"5.扩展能力 5.1 打开活动页面 Android com.vigame.Activity.open(); iOS [IOSLoader openActivityPage]; Unity Wb.CoreManager.Instance.OpenActivityPage(); 5.2 打开公告 Android Notice.open(); iOS [IOSLoader openNoticePage]; Unity Wb.CoreManager.Instance.OpenActivityNotice(); 5.3 提交排行数据 Android Rank.submit(level,score,usedCoins,leftCoins);//提交排行数据 iOS [IOSLoader submitRankInfoWithUserId:@\"userId\" level:level score:score usedCoins:usedCoins leftCoins:leftCoins]; Unity Wb.CoreManager.Instance.SumbitRankData(string userId, int level, int score, int usedCoins, int leftCoins); 参数： userId：用户id level：关卡ID score：分数 usedCoins：已用钻石数 leftCoins：剩余钻石数 5.4 打开排行榜 Android Rank.open(); iOS [IOSLoader openRank]; Unity Wb.CoreManager.Instance.OpenRank(); 5.5 打开用户反馈 Android Feedback.open(); iOS [IOSLoader openGM]; Unity Wb.CoreManager.Instance.OpenFeedback(); 5.6 打开隐私政策 Android CoreManagerNative.openProtocolByWeb(); iOS [IOSLoader openPrivacyPolicy]; Unity Wb.CoreManager.Instance.OpenPrivacyPolicy(); 注：隐私政策中的公司名称可通过assets/VigameConfig.xml中的CompanyIndex修改 5.7 打开用户协议 Android CoreManagerNative.openUserAgreementByWeb(); iOS [IOSLoader openUserAgreement]; Unity Wb.CoreManager.Instance.OpenUserAgreementByWeb(); 5.8 使用兑换码 5.8.1 是否支持兑换码 Android CDKey.isSupport(); iOS [IOSLoader isSupportExchangeCode]; Unity Wb.CoreManager.Instance.CDKeyIsSupport() 返回值： true：支持 false：不支持 5.8.2 使用兑换码 Android CDKey.use(String dhm); CDKey.use(String dhm,DhmCallback callback); 示例： String dhm = \"111111\"; CDKey.use(dhm,new CDKey.DhmCallback() { @Override public void onFinish(CDKey.DhmData data) { // TODO Auto-generated method stub showToast(data.message); } }); 参数： dhm：兑换码 callback：兑换码兑换结果回调 iOS //使用兑换码[IOSLoader userExchangeCode:@“code”]; 参数： code：兑换码 Unity Wb.CoreManager.Instance.UseCDKey(string dhm) 参数： dhm：兑换码 5.9 本地推送（仅限iOS） iOS [IOSLoader pushLocalNotification:@“alertBody” fireDate:@“fireDate” noticeId:@”noticeId“];//取消单次推送[IOSLoader cancelPushWithId:@”noticeId“];//取消所有推送[IOSLoader cancelAllPush]; 参数： alertBody：推送内容 fireDate：触发时间 noticeId：推送id（用于取消推送） Unity Wb.CoreManager.Instance.NotifyNotification(int id, string body, long fireDate, int unitInterval,Dictionary userinfo); 参数： id：推送id（用于取消推送） body：推送内容 fireDate：触发时间 unitInterval：间隔时间 userinfo：用户信息 5.10 快速评分（仅限iOS） iOS //快速打分 [IOSLoader fastmark] 5.11 跳转评论（仅限iOS） iOS //跳转评论 [IOSLoader jumpComment]; "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/6.-she-jiao-neng-li.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/6.-she-jiao-neng-li.html","title":"6.社交能力","keywords":"","body":"6.社交能力 6.1 登录 Android SocialNative.login(int type,final SocialCallBack callback)； 示例： SocialNative.login(SocialDef.TYPE_WX,new SocialNative.SocialCallBack(){ @Override public void onResult(HashMap map) { if(map != null && map.get(\"retCode\") !=null && map.get(\"retCode\").equals(\"1\")) { System.out.println(\"登录成功 可以更新用户信息\"); }else { System.out.println(\"登录失败\"); } } }); iOS [IOSLoader thirdLoginWithType:type callBack:^(KTMLoginState code, NSString *returnMsg) { }]; Unity Wb.SocialManager.Instance.Login(int type, Action callFun) 示例： Wb.SocialManager.Instance.Login(type, (result) => { if (result) { string outStr1; if (LanguageManagers.Instance.languageDic.TryGetValue(\"登录成功\", out outStr1)) { ShowToast(outStr1, false); } } else { string outStr1; if (LanguageManagers.Instance.languageDic.TryGetValue(\"登录失败\", out outStr1)) { ShowToast(outStr1, true); } } }); 参数： type：登录类型 0:微信登录，3:FB登录 callback：回调 6.2 获取用户信息 Android SocialNative.updateUserInfo(int type,final SocialCallBack callback); 示例： SocialNative.updateUserInfo(SocialDef.TYPE_WX, new SocialNative.SocialCallBack() { @Override public void onResult(HashMap map) { if (map !=null && map.get(\"openid\") != null && ((String)map.get(\"openid\")).length() > 0) { System.out.println(\"获取用户信息成功\"); } else { System.out.println(\"获取用户信息失败\"); } } }); iOS [IOSLoader getUserInfoWithType:type callBack:^(NSDictionary *userinfo) { }]; Unity Wb.SocialManager.Instance.GetUserInfo(int type, Action callFun) 示例： Wb.SocialManager.Instance.GetUserInfo(type, (result,info) => { if (result) { string outStr1; if (LanguageManagers.Instance.languageDic.TryGetValue(\"获取用户信息成功\", out outStr1)) { ShowToast(outStr1, false); } userInfoTxt.GetComponent().text = info; } else { string outStr1; if (LanguageManagers.Instance.languageDic.TryGetValue(\"获取用户信息失败\", out outStr1)) { ShowToast(outStr1, true); } userInfoTxt.GetComponent().text = info; } }); 参数： type：登录类型 0:微信登录，3:FB登录 callback：回调 6.3 分享 Android SocialNative.share(HashMap param); 参数： param：分享参数 iOS [IOSLoader shareWithTitle:title imageUrl:imageurl url:url completeHandler:^(BOOL succed, NSString *reason) { }]; 参数： title：分享标题 imageurl：分享图片地址 url：分享链接 callback：回调 Unity Wb.SocialManager.Instance.Share(Dictionary attributes) 示例： Wb.SocialManager.Instance.GetUserInfo(type, (result,info) => { if (result) { string outStr1; if (LanguageManagers.Instance.languageDic.TryGetValue(\"获取用户信息成功\", out outStr1)) { ShowToast(outStr1, false); } userInfoTxt.GetComponent().text = info; } else { string outStr1; if (LanguageManagers.Instance.languageDic.TryGetValue(\"获取用户信息失败\", out outStr1)) { ShowToast(outStr1, true); } userInfoTxt.GetComponent().text = info; } }); "},"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/6.-qi-ta.html":{"url":"cn/ke-hu-duan-jie-ru/ye-wu-jie-kou/6.-qi-ta.html","title":"其他（未完）","keywords":"","body":"其他（未完） 6. 互推相关 6.1 初始化 XYXNative.init(); 6.2 获取互推数据 XYXNative.getConfig(); 6.3 上报互推展示 XYXConfig config = XYXNative.getConfig(); ArrayList list = config.getItemList(); if (list != null && list.size() > 0) { XYXItem item = list.get(0); config.exposureShow(item); } 6.4 响应互推点击 XYXConfig config = XYXNative.getConfig(); ArrayList list = config.getItemList(); if (list != null && list.size() > 0) { XYXItem item = list.get(0); config.handleClick(item); } 7. 社交相关 7.1 初始化 SocialProxy.init() 7.2 登录及获取用户信息 SocialProxy.loginAndUpdateInfo(SocialDef.TYPE_WX,new SocialProxy.SocialCallBack() { @Override public void onResult(HashMap map) { if(map.get(\"retCode\").equalsIgnoreCase(\"1\"))//获取用户信息成功 { Log.i(\"skay\",\"loginAndUpdateInfo success \"); Log.i(\"skay\",\"openId is \"+map.get(\"openid\")); Log.i(\"skay\",\"nickname is \"+map.get(\"nickname\")); Log.i(\"skay\",\"headimgUrl is \"+map.get(\"headimgUrl\")); Log.i(\"skay\",\"sex is \"+map.get(\"sex\")); }else//登录失败/获取用户信息失败 { Log.i(\"skay\",\"loginAndUpdateInfo fail \"+map.toString()); } } }); 7.3 微信需引用微信模块 implementation 'com.libVigame.Social:WeChat:2.1.9'//改为最新版本 7.4 微信登录需添加 WXEntryActivity类(包名为 applicationID + \".wxapi\") package com.hw2.jgzsj2.wxapi;//包名为 applicationID + \".wxapi\" import android.app.Activity; import android.content.Intent; import android.os.Bundle; import com.libSocial.WeChat.WeChatActivityHandler; public class WXEntryActivity extends Activity { private WeChatActivityHandler weChatActivityHandler = null; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); weChatActivityHandler = new WeChatActivityHandler(); weChatActivityHandler.onCreate(this); this.finish(); } @Override protected void onNewIntent(Intent intent) { super.onNewIntent(intent); if (weChatActivityHandler != null) { weChatActivityHandler.onNewIntent(intent); } } } "},"cn/xiao-you-xi-jie-ru/":{"url":"cn/xiao-you-xi-jie-ru/","title":"小游戏接入","keywords":"","body":"小游戏接入 一、接入流程 1.申请参数 联系动能商务人员获取产品参数。包括： 小游戏等平台的Appid，比如微信、手Q等 动能的Appid 如果发布微信还需要阿拉丁的app_key 需确保在微信后台配置以下request域名地址： https://log.aldwx.com https://api.vzhifu.net https://tj.vzhifu.net https://a.vigame.cn 2.导入SDK 1)下载SDK压缩包，解压至本地目录。 SDK下载 CreatorDemo克隆地址（Creator2.2.2制作）: git clone http://dnsdk.vimedia.cn:8080/r/CreatorDemo-H5.git LayaDemo克隆地址（Laya1.0制作）: git clone http://dnsdk.vimedia.cn:8080/r/WechatDemo-Laya.git 2)将\"dnsdk.js\"文件引入到项目中。 注：建议导入到公用头部，确保项目环境能访问到dnsdk工具类。 3)如发布微信，需接入阿拉丁SDK。 参考： http://doc.aldwx.com/aldwx/src/game.html 的“一、接入SDK”部分。 注：只需要引入sdk部分，不需要调用接口。 3.接入SDK方法 详见“二、接入方法说明” 4.测试 查看输出，有上报数据输出即表示接入成功。 "},"cn/xiao-you-xi-jie-ru/chu-shi-hua.html":{"url":"cn/xiao-you-xi-jie-ru/chu-shi-hua.html","title":"初始化","keywords":"","body":"初始化 1.初始化SDK（必接） 方法接口： dnsdk.init(appid,adData); 参数说明： 参数 参数类型 是否必传 描述 appid String 是 产品ID adData Object 否 广告参数 adData 属性： 标识 参数类型 描述 wechat Object 微信小游戏 qq Object QQ小游戏 tt Object 头条小游戏 oppo Object Oppo小游戏 vivo Object Vivo小游戏 meizu Object 魅族小游戏 二级Object属性说明： 参数 类型 描述 bannerAdId String Banner广告ID interstitialAdId String 插屏广告ID rewardedVideoAdId String 激励视频广告ID boxAdId String QQ盒子广告ID nativeAdId String 原生广告ID 示例代码： var adData = { wechat: { bannerAdId: \"adunit-de95d0a3dfda7d13\", interstitialAdId: \"adunit-7a19f10e95343d01\", rewardedVideoAdId: \"adunit-858bfb991ab0f3e2\" }, oppo: { bannerAdId: \"158197\", interstitialAdId: \"158198\", rewardedVideoAdId: \"158203\", nativeAdId: \"158200\" }, vivo: { bannerAdId: \"a43ae2d881d24b37b37d2f8fc464470b\", interstitialAdId: \"5c70d8170f0245b8ba8893544b41169a\", rewardedVideoAdId: \"9dd39bd805514e1f85b02a4316ecbe32\", nativeAdId: \"\" }, qq: { bannerAdId: \"ba4c4f87b2a6bdc4ec0d59bbaffc5723\", interstitialAdId: \"d4a1ecbcdc53cd0ba61769982c0fb603\", rewardedVideoAdId: \"d710a7647e9e5de62294827aaee11665\", boxAdId: \"0e8af24d66c04fec00ef26e58091f1ed\" }, tt: { bannerAdId: \"1v2pi8lvk8w68965eg\", interstitialAdId: \"11286cj144c4d5g841\", rewardedVideoAdId: \"18g7egd3mm9222217j\" }, meizu : { bannerAdId: \"R6tj9yn1\", interstitialAdId: \"NR0RmW64\", rewardedVideoAdId: \"lJTAVJyc\", }, baidu: { bannerAdId: \"7118598\", bannerAdSidId: \"a693805c\", rewardedVideoAdId: \"7117411\", rewardedVideoAdSidId: \"a693805c\", } }; //初始化 dnsdk.init(\"20065\", adData); 2.初始化监听 方法接口： dnsdk.onInit(Object object); 参数说明： Object object: 参数 参数类型 是否必传 描述 success function 否 接口调用成功的回调 fail function 否 接口调用失败的回调 complete function 否 接口调用结束的回调（调用成功、失败都会执行） Object res: 参数 参数类型 描述 error int 错误码。0表示成功，其他表示网络错误。 provider String 当前所在的平台(wechat/qq/oppo/vivo/tt) openid String 能取到平台openid时为平台的openid，否则为uuid。 ptOpenid String 平台的openid 示例代码： dnsdk.onInit({ success:function(res){ }, fail:function(res){ }, complete:function(res){ } }); 3.获取当前所在平台 方法名称： dnsdk.getProvider() 返回值： 标识 描述 wechat 微信小游戏 qq QQ小游戏 tt 头条小游戏 oppo Oppo小游戏 vivo Vivo小游戏 meizu 魅族小游戏 baidu 百度小游戏 "},"cn/xiao-you-xi-jie-ru/fen-xiang.html":{"url":"cn/xiao-you-xi-jie-ru/fen-xiang.html","title":"分享","keywords":"","body":"分享 1.分享接口 1.1 设置分享 在微信、QQ、头条小游戏生效 将微信的wx.onShareAppMessage替换成dnsdk.onShareAppMessage 方法接口： dnsdk.onShareAppMessage(callback); 参数说明： function callback 用户点击右上角菜单的「转发」按钮时触发的事件的回调函数 参数 Object res 属性 是否必须 类型 说明 title 否 string 转发标题，不传则默认使用服务器数据 imageUrl 否 string 转发显示图片的链接，不传则使用服务器数据。可以是网络图片路径或本地图片文件路径或相对代码包根目录的图片文件路径。显示图片长宽比是 5:4 query 否 string 查询字符串，必须是 key1=val1&key2=val2 的格式。从这条转发消息进入后，可通过 wx.getLaunchOptionsSync() 或 wx.onShow() 获取启动参数中的 query。 示例代码1： dnsdk.onShareAppMessage();//使用服务器数据 示例代码2： //分享，监听用户点击右上角菜单的“转发”按钮时触发的事件 dnsdk.onShareAppMessage(function(){ return { imageUrl : 'https://favicon.yandex.net/favicon/aldwx.com', //转发显示图片的链接 title : '分享title', //转发标题 query : 'id=89&select=2'//查询字符串，必须是 key1=val1&key2=val2 的格式。从这条转发消息进入后，可通过 wx.getLaunchOptionSync() 或 wx.onShow() 获取启动参数中的 query。 } }) 1.2 分享 在微信、QQ、头条小游戏生效 方法接口： dnsdk.shareAppMessage(object); 将微信的wx.shareAppMessage替换成dnsdk.shareAppMessage 示例代码1： dnsdk.shareAppMessage();//使用服务器数据 示例代码2： // 分享，主动拉起转发，进入选择通讯录界面 dnsdk.shareAppMessage({ imageUrl : 'https://favicon.yandex.net/favicon/aldwx.com',//转发标题 title : '分享title',//转发标题 query : 'id=89&select=2'//查询字符串，必须是 key1=val1&key2=val2 的格式。从这条转发消息进入后，可通过 wx.getLaunchOptionSync() 或 wx.onShow() 获取启动参数中的 query。 }) "},"cn/xiao-you-xi-jie-ru/hu-tui.html":{"url":"cn/xiao-you-xi-jie-ru/hu-tui.html","title":"互推","keywords":"","body":"互推 1.互推接口 1.1 监听互推数据获取成功 方法接口: dnsdk.onDataReceived(func) 示例代码： dnsdk.onDataReceived(function (data) { dnsdk.log(data); }); 1.2 使用互推数据 方法接口: dnsdk.data.pushData 示例代码： dnsdk.data.pushData.iconList 互推数据使用说明： oppo 参数 类型 互推位置 iconList Array icon样式（单个图标）互推 grouppageList Array 首页侧边栏、6宫格矩阵（结算、失败页面） 头条 参数 类型 互推位置 grouppageList Array 6宫格矩阵（结算、失败页面） 微信 参数 类型 互推位置 moregameList Array 首页开屏弹框 iconList Array 首页图标互推 bannerList Array 横幅式互推 plaqueList Array 插屏式互推 buttomList Array 猜你爱玩互推 grouppageList Array 6宫格矩阵（结算、失败页面） moregroupList Array 插屏好友图像 hotgameList Array 汇聚页热门推荐 fungameList Array 汇聚页好友在玩互推 互推二级字段说明： 参数 类型 描述 id String 推广产品的id icon String 推广产品图标地址 plist String 帧动画文件地址 pushImage String 推广产品二维码图 pushAppID String 推广产品的微信Appid（oppo小游戏为包名） open String 打开类型（1.image 2.url 3.miniprogram） openPath String 打开的小程序的路径 gameName String 推广产品的名称 extraData String 需要传递给目标小程序的数据，目标小程序可在 App.onLaunch，App.onShow 中获取到这份数据 注意：跳转小程序时，pushAppID和openPath字段需要同时用到，否则无法监控推送效果。 1.3 互推展示统计 方法接口： dnsdk.tjSendShowEvent(eventid,object) 参数说明： 参数 类型 描述 eventid String 事件名称，通常为互推数据列表标识 object Object 上报的信息 Object object: 参数/key 描述 参数类型/value 是否必传 label 当前互推的唯一标识符 String 是 pushappid 要跳转的appid String 是 placement 展示界面名称标识 String 是 示例代码： // 展示上报 var tjData = { label: this.data.id, pushappid: this.data.pushAppID, placement: \"home\" }; dnsdk.tjSendShowEvent(\"grouppage\", tjData); 1.4 互推点击统计 方法接口： dnsdk.tjSendClickEvent(eventid, object) 参数说明： 参数 类型 描述 eventid String 事件名称，通常为互推数据列表标识 object Object 上报的信息 Object object: 参数/key 描述 参数类型/value 是否必传 label 当前互推的唯一标识符 String 是 pushappid 要跳转的appid String 是 placement 展示界面名称标识 String 是 示例代码： // 点击上报 var tjData = { label: this.data.id, pushappid: this.data.pushAppID, placement: \"home\" }; dnsdk.tjSendClickEvent(\"grouppage\", tjData); 2.小程序跳转 在微信、QQ、OPPO小游戏上生效 方法接口： dnsdk.navigateToMiniProgram(object) 参数说明： Object object: 属性 类型 必填 说明 appId string 是 要打开的小程序 appId，对于oppo小游戏该参数是包名 path string 否 打开的页面路径，如果为空则打开首页 extraData object 否 需要传递给目标小程序的数据，目标小程序可在 App.onLaunch，App.onShow 中获取到这份数据。 envVersion string 否 要打开的小程序版本。仅在当前小程序为开发版或体验版时此参数有效。如果当前小程序是正式版，则打开的小程序必定是正式版。 success function 否 接口调用成功的回调函数 fail function 否 接口调用失败的回调函数 complete function 否 接口调用结束的回调函数（调用成功、失败都会执行 示例代码： dnsdk.navigateToMiniProgram({ appId: selfData.pushAppID, path: selfData.openPath, extraData: selfData.extraData, success:function(res) { // 打开成功 }, fail:function() { //打开失败 } }) 3.头条小游戏弹窗 参考以下链接接入： https://developer.toutiao.com/dev/cn/mini-game/develop/open-capacity/more-mini-game/tt.showmoregamesmodal "},"cn/xiao-you-xi-jie-ru/tong-ji.html":{"url":"cn/xiao-you-xi-jie-ru/tong-ji.html","title":"统计","keywords":"","body":"统计 1.自定义事件统计 方法接口： dnsdk.tjSendCustomEvent(eventId, object); 参数说明： 参数 描述 参数类型 长度 是否必传 eventId 事件名称 String 不超过255个字符 是 object 事件参数 Object 是 示例代码： dnsdk.tjSendCustomEvent('事件名称',{'参数key' : '参数value'}) 2.关卡统计 此接口用于追踪玩家对关卡的完成情况等 方法接口： //关卡开始 dnsdk.tjOnStart(object) //关卡进行中 dnsdk.tjOnRunning(object) //关卡结束 dnsdk.tjOnEnd(object) dnsdk.tjOnStart关卡开始 参数 描述 参数类型 规则 是否必传 stageId 关卡ID String 1 , 2 , 3 , 1.1 , 1.2 , 1.3 格式 最多支持 32 个字符 是 stageName 关卡名称 String 最多支持 32 个字符 是 userId 用户名称 String 最多支持 32 个字符 否 示例代码： dnsdk.tjOnStart({ stageId : \"1.1\", //关卡ID， 必须是1 || 2 || 1.1 || 12.2 格式 该字段必传 stageName : \"第一大关-第一小关\",//关卡名称，该字段必传 userId : \"123456\" //用户ID }) dnsdk.tjOnRunning捕捉用户在关卡中的一些行为和操作 参数 描述 参数类型 规则 是否必传 stageId 关卡ID String 1 , 2 , 3 , 1.1 , 1.2 , 1.3 格式 最多支持 32 个字符 是 stageName 关卡名称 String 最多支持 32 个字符 是 userId 用户名称 String 最多支持 32 个字符 否 event 时间类型 String payStart:发起支付 paySuccess:支付成功 payFail:支付失败 tools:使用道具 revive:复活 award:奖励 否 params 事件参数 Object 否 params.itemName 商品/道具名称 String “屠龙刀” 是 params.itemId 商品/道具ID String \"123\" 否 params.itemCount 商品/道具数量 Number 1 否 默认:1 params.desc 描述 String “+9屠龙刀” 否 params.itemMoney 商品/道具价格 Number 12 否 默认:0 示例代码： // 在关卡中使用道具 dnsdk.tjOnRunning({ stageId : \"1.1\", stageName : \"第一大关-第一小关\", userId : \"123456\", event : \"tools\", params : { itemName : \"火力加强\", } }) dnsdk.tjOnEnd 关卡结束 参数 描述 参数类型 规则 是否必传 stageId 关卡ID String 1 , 2 , 3 , 1.1 , 1.2 , 1.3 格式 最多支持 32 个字符 是 stageName 关卡名称 String 最多支持 32 个字符 是 userId 用户ID String 最多支持 32 个字符 否 event 事件类型 String complete:关卡完成 fail:关卡失败 是 params 事件参数 Object params.desc 描述 String 对关卡失败/成功的描述 否 示例代码： //关卡完成 dnsdk.tjOnEnd({ stageId : \"1\", //关卡ID 该字段必传 stageName : \"第一关\", //关卡名称 该字段必传 userId : \"06_bmjrPtlm6_2sgVt7hMZOPfL2M\", //用户ID 可选 event : \"complete\", //关卡完成 关卡进行中，用户触发的操作 该字段必传 params : { desc : \"关卡完成\" //描述 } }) "},"cn/xiao-you-xi-jie-ru/guang-gao/":{"url":"cn/xiao-you-xi-jie-ru/guang-gao/","title":"广告","keywords":"","body":"广告 "},"cn/xiao-you-xi-jie-ru/guang-gao/banner-guang-gao.html":{"url":"cn/xiao-you-xi-jie-ru/guang-gao/banner-guang-gao.html","title":"Banner广告","keywords":"","body":"Banner广告 dnsdk.openBanner(object) openBanner 在整体游戏进程中，只调用一次，游戏中会自动刷新。 快捷打开banner，banner位于底部。如需自定义广告位置，请使用createBannerAd接口。 参数 object 属性 类型 是否必填 说明 adUnitId string 否 banner广告位标识。如果不填，会使用init传入的默认值。 adIntervals number 否 广告自动刷新的间隔时间，单位为秒，参数值必须大于等于30（该参数不传入时 Banner 广告默认30秒刷新一次） style object 否 banner广告组件的样式 fail function 否 打开失败回调，平台sdk的onError会触发该方法 success function 否 打开成功回调，平台sdk的onShow会触发该方法 object.style 的属性 属性 类型 是否必填 说明 left number 是 定义 banner 左上角距离屏幕左边的距离 top number 是 定义 banner 左上角距离屏幕上边的距离 width number 是 定义 banner 展示的宽度 heiht number 是 定义 banner 展示的高度 返回值 BannerAd 广告组件 示例代码： dnsdk.openBanner({ fail:function (err) { console.log(\"打开banner失败 : \" + JSON.stringify(err)); }, success :function () { console.log(\"打开banner成功 \"); } }); dnsdk.destroyBanner() 快捷销毁banner。 dnsdk.hideBanner() 隐藏banner，此时不会销毁。 dnsdk.showBanner() 展示之前被隐藏的banner。 使用openBanner接口后会自动展示，不需要再单独调用showBanner。 "},"cn/xiao-you-xi-jie-ru/guang-gao/cha-ping-guang-gao.html":{"url":"cn/xiao-you-xi-jie-ru/guang-gao/cha-ping-guang-gao.html","title":"插屏广告","keywords":"","body":"插屏广告 dnsdk.openInterstitial(object) 快捷打开插屏。 参数 object 属性 类型 是否必填 说明 adUnitId string 否 插屏广告位标识，如果不填，会使用init传入的默认值。 fail function 否 打开失败回调，平台sdk的onError会触发该方法 success function 否 打开成功回调，平台sdk的onShow会触发该方法 close function 否 关闭广告回调，平台sdk的onClose会触发该方法 返回值 InterstitialAd 广告组件 示例代码： dnsdk.openInterstitial({ fail: function (err) { console.log(\"打开插屏失败 : \" + JSON.stringify(err)); }, success: function () { console.log(\"打开插屏成功 \"); }, close: function () { console.log(\"插屏关闭\"); } }); dnsdk.destroyInterstitial() 快捷销毁插屏。 "},"cn/xiao-you-xi-jie-ru/guang-gao/ji-li-shi-pin-guang-gao.html":{"url":"cn/xiao-you-xi-jie-ru/guang-gao/ji-li-shi-pin-guang-gao.html","title":"激励视频广告","keywords":"","body":"激励视频广告 dnsdk.openRewardedVideo(object) 快捷打开视频。 参数 object 属性 类型 是否必填 说明 adUnitId string 否 banner广告位标识。如果不填，会使用init传入的默认值 fail function 否 打开失败回调，平台sdk的onError会触发该方法 success function 否 打开成功回调，平台sdk的onShow会触发该方法 close function 否 关闭广告回调，平台sdk的onClose会触发该方法，通常在该方法内根据isEnded参数进行道具下发判断 返回值 RewardedVideoAd 广告组件 示例代码： dnsdk.openRewardedVideo({ fail:function (err) { console.log(\"打开视频失败 : \" + JSON.stringify(err)); }, success :function () { console.log(\"打开视频成功 \"); }, close : function (res) { console.log(\"视频播放结果 : \" + res.isEnded); } }); 用户点击 关闭广告 按钮的事件的回调函数 dnsdk.isRewardedVideoLoaded() 用于查询广告是否可播放。 由于部分平台会自动预先加载。所以我们提供此接口用于查询是否有加载好的广告。 返回值 true：可播放 false：不可播放 "},"cn/xiao-you-xi-jie-ru/guang-gao/qq-he-zi-guang-gao.html":{"url":"cn/xiao-you-xi-jie-ru/guang-gao/qq-he-zi-guang-gao.html","title":"盒子广告","summary":"目前只在QQ、Oppo小游戏平台有效","keywords":"","body":"盒子广告 dnsdk.openBoxAd(object) 快捷打开盒子广告。 参数 object 属性 类型 是否必填 说明 adUnitId string 否 广告位标识，如果不填，会使用init传入的默认值。 fail function 否 打开失败回调，平台sdk的onError会触发该方法 success function 否 打开成功回调，平台sdk的onShow会触发该方法 close function 否 关闭广告回调，平台sdk的onClose会触发该方法 返回值 BoxAd广告组件 示例代码： dnsdk.openBoxAd({ fail: function (err) { console.log(\"盒子打开失败 : \" + JSON.stringify(err)); }, success: function () { console.log(\"盒子打开成功 \"); }, close: function () { console.log(\"盒子关闭\"); } }); "},"cn/xiao-you-xi-jie-ru/guang-gao/yuan-sheng-guang-gao.html":{"url":"cn/xiao-you-xi-jie-ru/guang-gao/yuan-sheng-guang-gao.html","title":"原生广告","summary":"目前只在Oppo、Vivo小游戏平台有效","keywords":"","body":"原生广告 dnsdk.getNativeAd() 获取原生广告组件。 频次限制：原生广告展示后20s内调用getNativeAd会直接返回null。 返回值 NativeAd广告组件 注意：当没有可用原生广告或者调用太频繁时，会返回null NativeAd 原生广告 NativeAd.getData() 获取原生广告数据。 NativeAd.show() 广告展示后调用。内部会自动触发平台的reportAdShow接口。 NativeAd.click() 用户点击广告后调用。内部会自动触发平台的reportAdClick接口。 NativeAd.close() 用户关闭广告后调用。用于后续广告的预加载。 "},"cn/xiao-you-xi-jie-ru/zhuo-mian-tu-biao.html":{"url":"cn/xiao-you-xi-jie-ru/zhuo-mian-tu-biao.html","title":"桌面图标","keywords":"","body":"桌面图标 1.创建桌面图标 在QQ、OPPO、Vivo、华为小游戏上生效 方法接口： dnsdk.installShortcut(object); 参数说明： Object object 参数 参数类型 是否必传 描述 success function 否 接口调用成功的回调函数 fail function 否 接口调用失败的回调函数 complete function 否 接口调用结束的回调函数 示例代码： dnsdk.installShortcut({ success : function () { console.log(\"添加到桌面success\"); }, fail:function (err) { console.log(\"添加到桌面fail:\"+ JSON.stringify(err)); }, complete:function () { console.log(\"添加到桌面complete\"); } }); "},"cn/xiao-you-xi-jie-ru/qi-ta-guang-gao.html":{"url":"cn/xiao-you-xi-jie-ru/qi-ta-guang-gao.html","title":"其他","keywords":"","body":"其他 由于各家平台可能有自己的独特接口，SDK无法统一整合处理。建议需使用特殊能力时直接参照各家的文档进行接入。 参考文档如下： 微信： https://developers.weixin.qq.com/minigame/dev/api/ad/InterstitialAd.html QQ： https://q.qq.com/wiki/develop/game/API/ad/qq.createInterstitialAd.html Oppo： https://open.oppomobile.com/wiki/doc#id=10538 Vivo： http://minigame.vivo.com.cn/documents/#/api/da/interstitial-da 字节： https://developer.toutiao.com/dev/cn/mini-game/develop/open-capacity/ads/tt.createbannerad 魅族： [https://shimo.im/docs/enni3mhvNyo5fZOm/read] "},"cn/xiao-you-xi-jie-ru/sdk-xia-zai.html":{"url":"cn/xiao-you-xi-jie-ru/sdk-xia-zai.html","title":"SDK下载","keywords":"","body":"SDK下载 测试版本 版本：v4.6.7 发布时间：2021-1-15 下载 增加华为小游戏广告支持 华为小游戏广告不做请求失败重试操作，增加频繁误触限制 oppo小游戏banner默认不刷新 增加广告位控制接口 正式版本 版本：v4.6.3 发布时间：2020-12-3 下载 增加isAdBeOpen业务接口 版本：v4.6.2 发布时间：2020-9-24 下载 修复vivo平台请求互推数据时拿不到platform的问题 修改头条视频为启动时预加载，加载失败后会自动重试 修复视频可能多通知一次加载成功的问题 增加oppo盒子广告 修复魅族小游戏插屏失败后不能重新加载的问题 版本：v4.5 发布时间：2020-6-22 下载 增加百度小游戏支持(Banner、 视频) 抖音banner ,重新打开接口 oppo 原生插屏和banner , 1 分钟内，不可打开 或获取数据为 null 头条视频不再预加载，每次打开时，将重新创建 头条视频 isLoad 默认改为成功 去除 oppo 原生广告 20 秒限制 版本：v4.4 发布时间：2020-6-15 下载 增加魅族小游戏支持(Banner、 插屏、视频) 修复微信插屏预加载一直 onError 的问题 版本：v4.3 发布时间：2020-6-8 下载 修改头条视频的加载方式 修改初始化接口，不传广告参数报错的问题 修复微信插屏预加载一直 onError 的问题 版本：v4.2 发布时间：2020-5-13 下载 增加预加载插屏广告 版本：v4.1 发布时间：2020-4-28 下载 增加手Q的盒子广告接口 增加原生相关接口 判断头条渠道，非抖音渠道banner可生效 支持后台配置分享内容 头条的openid由本地生成改为平台获取 修复oppo的banner刷新频繁的问题 修复统计上报参数问题 版本：v4.0 发布时间：2020-4-17 下载 修改各家banner广告切换方式 修改头条、微信、QQ的视频刷新间隔 头条、微信、QQ统计场景来源 版本：v3.2 发布时间：2020-4-8 下载 增加dnsdk.hideBanner()和dnsdk.showBanner() 优化vivo广告刷新逻辑 版本：v3.1 发布时间：2020-3-30 下载 修复互推上报问题，互推点击和互推上报改为两个参数 版本：v3.0 发布时间：2020-3-26 下载 增加onInit初始化监听 增加桌面图标跳转功能（qq/oppo/vivo支持） 支持头条渠道互推配置 Banner支持oppo、vivo、qq等平台的定时刷新 增加插屏失败后自动重试功能 重构接口：1.open方法增加success/fail/close回调 2.不再支持onXXX、offXXX、createXXX风格的接口。 版本：v2.2 发布时间：2020-3-9 下载 增加广告功能（Banner/插屏/激励视频），仅支持微信/QQ/oppo/vivo/字节跳动 兼容oppo小游戏跳转功能 数据分平台统计 版本：v2.1 发布时间：2019-11-13 下载 修复统计 tjSendShowEvent 和 tjSendClickEvent 统计不上问题 版本：v2.0 发布时间：2019-11-5 下载 小游戏统计SDKV2.0发布！增加多平台接口支持 版本：v1.0 发布时间：2019-10-24 下载 小游戏统计SDKV1.0发布！ "},"en/":{"url":"en/","title":"English","keywords":"","body":"English Introduce the functions and interface usage of core services. Support Android, iOS, Unity. "},"en/ke-hu-duan-jie-ru/":{"url":"en/ke-hu-duan-jie-ru/","title":"For Client","keywords":"","body":"For Client Introduce the functions and interface usage of core services. Support Android, iOS, Unity. "},"en/ke-hu-duan-jie-ru/android-jie-ru.html":{"url":"en/ke-hu-duan-jie-ru/android-jie-ru.html","title":"Android","keywords":"","body":"Android Clone URL of Demo： http://dnsdk.vimedia.cn:8080/summary/VigameDemo-Android-Google.git 1:Add maven repositories buildscript { repositories { jcenter() google() //WB plugin maven { url \"http://dnsdk.vimedia.cn:8081/repository/vigame-public/\" } } dependencies { classpath 'com.wb.check:plugin:1.0.3' //WB plugin classpath 'com.android.tools.build:gradle:3.2.1' } } allprojects { repositories { jcenter() google() //WB maven maven { url \"http://dnsdk.vimedia.cn:8081/repository/vigame-public/\" } maven { url \"https://dl.bintray.com/ironsource-mobile/android-adapters/\" } maven { url \"https://dl.bintray.com/ironsource-mobile/android-sdk\" } } } 2：Apply Plugin apply plugin: 'Wb-check' def WB = getPlugins().findPlugin('Wb-check') 3：Implementation modules //vigame common modules implementation WB.fixVersions('Proxy:Features_new') implementation WB.fixVersions('Loader:VigameLoader') implementation WB.fixVersions('Core:CoreManager') implementation WB.fixVersions('Pay:PayManager') implementation WB.fixVersions('AD3:ADManager') implementation WB.fixVersions('Social:SocialManager') implementation WB.fixVersions('Extention:ExtManager') implementation WB.fixVersions('TJ:TJManager') implementation WB.fixVersions('Push:PHManager') //third library implementation WB.fixVersions('Core:android-query') implementation 'com.android.support:support-v4:28.0.0' implementation 'com.android.support:appcompat-v7:28.0.0' //vigame google channel modules implementation WB.fixVersions('AD3:Ironsource_JuHe') implementation WB.fixVersions('Pay:GooglePlay') implementation WB.fixVersions('TJ:Facebook') implementation WB.fixVersions('TJ:AppsFlyer') 4：Add proguard config buildTypes { release { minifyEnabled true shrinkResources false // here added 'vigame_proguard.pro' proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'vigame_proguard.pro' signingConfig signingConfigs.release zipAlignEnabled true } } If the release version does not enable minify, you can skip 5：Add code in the project 5.1 Modify Application.java Add code in the corresponding life cycle in MyApplication class: public class MyApplication extends Application { @Override public void onCreate() { super.onCreate(); VigameLoader.applicationOnCreate(this); } @Override protected void attachBaseContext(Context base) { super.attachBaseContext(base); VigameLoader.applicationAttachBaseContext(this, base); } } Or Made your MyApplication class inherit VigameApplication: public class MyApplication extends VigameApplication { } 5.2 Modify the main Activity Unity games can skip this step and change the main Acitivity to UniWbActivity or its subclasses. Modify MainActivity And add code in the corresponding life cycle： @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); VigameLoader.activityOnCreate(this); //init sdk CoreNative.init(); } @Override protected void onResume() { super.onResume(); VigameLoader.activityOnResume(this); } @Override protected void onPause() { super.onPause(); VigameLoader.activityOnPause(this); } @Override protected void onDestroy() { super.onDestroy(); VigameLoader.activityOnDestroy(this); } @Override public void onWindowFocusChanged(boolean hasFocus) { super.onWindowFocusChanged(hasFocus); VigameLoader.activityOnWindowFocusChanged(this,hasFocus); } @Override protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) { super.onActivityResult(requestCode, resultCode, data); VigameLoader.activityOnActivityResult(this,requestCode,resultCode,data); } @Override protected void onRestart() { super.onRestart(); VigameLoader.activityOnRestart(this); } 6. Modify AndroidManifest.xml Add related parameter configuration, And use VigameStartActivity as launch item. 7. Put in the configuration file and modify Copy VigameConfig.xml and agrement.html to assets dictionary. And You can configurate ConfigVigame.xml in assets. Property description is as follows: Name description necessary GameOpenActivity the path of your main Activity yes ScreenOrientation the orientation of screen no SupportAdPositions the adPositionName of supports no WithSplashAD Support splash ad no IsSDK 'true' always and don't modify yes CompanyIndex the index of company，default 1 yes 8：Configuration items of test 1.Open app/build.gradle，modify package/channel/umeng appkey. Recommendation the package name as follows for Advertising display defaultConfig { applicationId \"com.gzsj.game.hw\" ... manifestPlaceholders = [ WB_PRJID : \"333361\", WB_CHANNEL: \"google\", WB_AppId :\"37683 \", WB_AppKey:\"wfm542g5dc40n0qmynbtxhthj2kdnhcm7gc99fs1ts8jloayyz\", ADMOB_APP_ID: \"ca-app-pub-7851203648968517~5682113463\", AppsFlyer_DevKey:\"X9NxxaMp4neHCFYreDxtd5\" ] } 2. Modify the background of Splash AD. If needs,repalace \"bg_splash_vigame.png\" file in res/drawable. "},"en/ke-hu-duan-jie-ru/ios.html":{"url":"en/ke-hu-duan-jie-ru/ios.html","title":"iOS","keywords":"","body":"iOS "},"en/ke-hu-duan-jie-ru/unitnit-game.html":{"url":"en/ke-hu-duan-jie-ru/unitnit-game.html","title":"Unity","keywords":"","body":"Unity Clone URL of Demo： Unity Project： http://dnsdk.vimedia.cn:8080/r/UnityDemo.git Android Studio Project： http://dnsdk.vimedia.cn:8080/r/UnityDemo-Google.git Import Unity Plugin download：Please obtain the UniWb.Wb.unitypackage from Vigame. Imported the UniWb.Wb.unitypackage, two folders named Streanming and Wb will appear in the resource management interface. StreamingAssets/st.txt saved signature info。 Wb folder is interface, there are ADManger , CoreManger, PayManger, ToolManger, XyxManger etc。 Use interface Reference bellow: interface Signature verification At the start of the game, if signature verification is required, this method is called: Wb.CoreManager.Instance.CheckSignature(); StreamingAssets/st.txt save the hash of the default signature, content is：-49852205,1765204456 To add your own signature，download here: vigame_signature_tool。 Then sign the apk with a new signature, and then add the signature information obtained in the above tool to the st.txt file. Android 1.Add Android modules Reference：Android Please skip the 5.2，because we will use Activity inherit instead. 2.Add UnityBridge module in build.gradle implementation WB.fixVersions('Bridge:UnityBridge') 3.Made the main Acitivy inherit UniWbActivity Or Made the UniWbActivity as main Activity package org.cocos2dx.cpp; import android.os.Bundle; import com.vigame.unitybridge.UniWbActivity; public class AppActivity extends UniWbActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); } } UniWbActivity has inherited UnityPlayerActivity "},"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/":{"url":"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/","title":"Interface","summary":"Common interface description","keywords":"","body":"Interface 1. Core Ability 2. Advertising Ability 3. Payment Ability 4. Analysis Ability 5.Extensions Ability "},"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/1.-ji-chu-neng-li.html":{"url":"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/1.-ji-chu-neng-li.html","title":"1.Core","keywords":"","body":"1.Core 1.1 Init SDK(must) Android CoreNative.init(); iOS [IOSLoader startLoaderLibrary]; 1.2 Set game exit callback（Only Android） Android（must） PayNative.setGameExitCallback(Runnable runnable); Example： PayNative.setGameExitCallback(new Runnable() { @Override public void run() { // TODO Auto-generated method stub CoreNative.gameExit();//you must execute this code before exit currentActivity.finish(); System.exit(0); } }); Parameters: runnable：the runnable of exit trigger. 1.3 Open exit game（must） Android PayNative.openExitGame(); Recommend ways as follows: if(PayNative.isExitGame()){ PayNative.openExitGame(); } else{ //pop the exit dialog of game ... } Unity Wb.PayManager.Instance.OpenExitGame(); Example： if (Wb.PayManager.Instance.IsSupportExit()) { Wb.PayManager.Instance.OpenExitGame(); } else { //pop the exit dialog of game showEngineExit(); } 1.4 Get parameters of Application Android import com.google.extra.platform.Utils; //get the name of Application Utils.getAppName(); //get package name Utils.get_package_name(); //get channel Utils.getChannel(); //get project id Utils.get_prjid(); //get version of Application Utils.get_app_ver(); //get imei Utils.get_imei(); iOS //get the name of Application [IOSLoader getAppName]; //get package name [IOSLoader getPackageName]; //get channel [IOSLoader getChannel]; //get project id [IOSLoader getPrjId]; //get version of Application [IOSLoader getAppVersion]; //get imei [IOSLoader getImei]; Unity //get package name Wb.CoreManager.Instance.GetPackageName(); //get channel Wb.CoreManager.Instance.GetChannel(); //get project id Wb.CoreManager.Instance.GetPrjid(); //get version of Application Wb.CoreManager.Instance.GetVerName(); //get imei Wb.CoreManager.Instance.GetImei(); 1.5 Get custom switch value Android ChnlManager.getValueForKey(String customKey); Example： //Return: 0-not audit 1-auditing ChnlManager.getValueForKey(\"audit\"); iOS + (NSString *)selfDefineSwitch:(NSString *)customKey; Example： [IOSLoader selfDefineSwitch:@\"audit\"] Unity Wb.CoreManager.Instance.GetCustomSwitch(string customKey) Example： Wb.CoreManager.Instance.GetCustomSwitch(\"audit\") Parameters： customKey：custom key name Return: 0-not audit, 1-auditing "},"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/2.-guang-gao-neng-li.html":{"url":"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/2.-guang-gao-neng-li.html","title":"2.Advertising","keywords":"","body":"2.Advertising 2.1 Set AD result callback Android ADNative.setAdResultCallback(AdParamCallback callback); Example： ADNative.setAdResultCallback(new ADManager.AdParamCallback() { @Override public void onStatusChanged(ADParam arg0, int status) { // TODO Auto-generated method stub Log.d(TAG,\"onStatusChanged:\"+status); } @Override public void onRequestAddGameCoin(ADParam arg0, int arg1, int arg2, String arg3) { // TODO Auto-generated method stub Log.d(TAG,\"onRequestAddGameCoin\"); } @Override public void onOpenResult(ADParam adParam, int result) { // TODO Auto-generated method stub Log.d(TAG,\"onOpenResult:\"+result); //Determine if the ad type is a video if(adParam.getType().equals(ADDef.AD_TypeName_Video)){ } if(result== ADParam.ADOpenResult_Success){//open success } else {//open fail } } }); Callback Description：AdParamCallback .onOpenResult(onOpenResult(ADParam adParam , int result)) ：the result of openAd adParam: param of ad. result: 0-success 1-fail 2-cancel AdParamCallback.onRequestAddGameCoin(ADParam adParam, int result, int num, String reason)：for integer wall(Depreciation) adParam: the param of ad result：the result of openAd：0-success 1-fail 2-cancel num：the num of coin for rewards reason：reason for failure 2.2 Open AD 2.2.1 Open the general AD（interstitial/reward video/banner/splash） Android ADNative.openAd(String adPositionName); iOS [IOSLoader openAd:@\"adPositioname\"]; [IOSLoader openAd:@\"adPositioname\" adCallback:^(BOOL flag, KTMADType type) { if (type == KTMADTypePlaque) { //qlaque } if (type == KTMADTypeVideo) { //Video } }]; Callback Description： adCallback:^(BOOL flag, KTMADType type)：the callback of ad result。 flag：true-open success false-open fail (note:If the video play complete,flag will be true.) type ： KTMADTypePlaque（plaque），KTMADTypeVideo（video） Note: you shold close backgroud music when plaque or video open success. Parameters： adPositionName： the name of position. Unity Wb.ADManager.Instance.OpenAd(string adPositionName, Action callBackFun); Example： Wb.ADManager.Instance.OpenAd(\"home_mfzs\", result => { if (result) { ShowToast(\"open success\", false); } else { ShowToast(\"open fail\", true); } }); Parameters： adPositionName： the name of position callBackFun：the callback of openAd 2.2.2 Open the native AD（interstitial/reward video/banner/splash） Android ADNative.openYsAd(String adPositionName,int width, int height, int x, int y,int limitSize); params： adPositionName： the name of AD position width：width on the screen, in pixels height：height on the screen, in pixels x：X in the upper left corner，in pixels y：Y in the upper left corner，in pixels limitSize：We strongly recommend that you choose 1 iOS [IOSLoader openYsAd:string width:int height:int x:int y:int]; 参数： adPositionName： the name of AD position width：width on the screen, in pixels height：height on the screen, in pixels x：X in the upper left corner，in pixels y：Y in the upper left corner，in pixels Unity Wb.ADManager.Instance.OpenYsAd(String adPositionName,int width, int height, int x, int y,int limitSize); params： adPositionName： the name of AD position width：width on the screen, in pixels height：height on the screen, in pixels x：X in the upper left corner，in pixels y：Y in the upper left corner，in pixels limitSize：We strongly recommend that you choose 1 Wb.ADManager.Instance.OpenYsAd(RectTransform rect, string adPositionName); params： adPositionName：the name of AD position rect：Unity's coordinate region Wb.ADManager.Instance.OpenYsAd(string adPositionName, float width, float height, float x, float y, float winSizeW, float winSizeH); params： adPositionName： the name of AD position width：width on the screen, in pixels height：height on the screen, in pixels x：X in the upper left corner，in pixels y：Y in the upper left corner，in pixels winSizeW：Design resolution screen width winSizeH：Design resolution screen height 2.3 IS AD Ready Android ADNative.isAdReady(String adPositionName); ADNative.isAdReady2(String adPositionName, String type); iOS [IOSLoader isAdReady:@\"adPositioname\"]; [IOSLoader isAdReady:@\"adPositioname\" type:@\"type\"]; Unity Wb.ADManager.Instance.IsAdReady(string adPositioname) Parameters： adPositionName:the name of position type: Ad type (plaque, video, banner, wall, splash, msg) 2.4 Close AD Android ADNative.closeAd(String adPositioname); iOS [IOSLoader closeAd:@\"adPositioname\"]; Unity Wb.ADManager.Instance.CloseAd(string adPositioname); Parameters： adPositionName： the name of position 2.5 Get video limit open number Android ADNative.getVideoLimitOpenNum(); iOS [IOSLoader getVideoLimitOpenNum]; Unity Wb.ADManager.Instance.GetVideoLimitOpenNum(); Return： the num of limit open times，-1 is unlimited。 2.6 is AD Opened（ Deprecated ） Android ADNative.isAdOpen(String adPositionName); iOS [IOSLoader isAdOpen:@\"adPositionName\"]; 返回值： true-ad display on screen false-ad is not display on screen 2.7 Is AD be opened in level Android ADNative.isAdBeOpenInLevel(String adPositionname,int lv); iOS [IOSLoader isAdBeOpenInLevel:@\"adPositionName\" level:lv]; Unity Wb.ADManager.Instance.IsAdBeOpenInLevel(string adPositionname,int lv); Parameters： adPositionname：the name of position lv：the number of level Return： true- support open false-deny open 2.8 Is AD type exist Android ADNative.isAdTypeExist(String adType); iOS [IOSLoader isAdTypeExist:@\"adType\"]; Unity Wb.ADManager.Instance.IsAdTypeExist(string adType) Parameters： adType：（plaque, video, banner, wall, splash, msg） Return： true-exist false-not exist 2.9 Get AD position param Android ADNative.getAdPositionParam(String positionName,String key); iOS [IOSLoader getAdPositionParam:@\"positionName\" valueName:@\"key\"] Unity Wb.ADManager.Instance.GetAdPositionParam(string positionName,string key); Parameters： positionName-the name of position key-custom name Return ： the value of input key. "},"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/3.-ji-fei-neng-li.html":{"url":"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/3.-ji-fei-neng-li.html","title":"3.Payment","keywords":"","body":"3.Payment 3.1 Set payment callback Android PayNative.setPayResultCallback(new PayManager.PayCallback() { @Override public void onPayFinish(PayParams params) { // TODO Auto-generated method stub switch (params.getPayResult()){ //pay success case PayDef.PAY_RESULT_SUCCESS: break; //pay fail case PayDef.PAY_RESULT_FAIL: break; //cancel pay case PayDef.PAY_RESULT_CANCEL: break; } } @Override public void onInitPayAgentFinish(BasePayAgent arg0) { // TODO Auto-generated method stub } }); Callback Method Description： onPayFinish：Payment Result Callback payParams：Payment related parameters (payment result, billing ID and other information can be obtained through this parameter) onInitPayAgentFinish：Payment method initialized success iOS [IOSLoader setPayResultCallback:^(NSDictionary *dic) { if ([[dic objectForKey:@\"reasonCode\"] integerValue] == 1) { //pay success } }]; 3.2 Does the market support exit?（only Android） Android（Necessary） PayNative.isExitGame(); Unity Wb.PayManager.Instance.IsSupportExit(); 3.3 Get payment button type Android PayNative.getButtonType(payID); iOS [IOSLoader getButtonType]; Unity Wb.PayManager.Instance.GetButtonType(int payID); 3.4 Get the market type Android PayNative.getMarketType(); iOS [IOSLoader getMarketType]; Unity Wb.PayManager.Instance.GetMarketType(); 3.5 Get package control information Android PayNative.getGiftCtrlFlagUse(int ctrl); iOS [IOSLoader getGiftSwitch:ctrl]; Unity Wb.PayManager.Instance.GetGiftCtrlFlagUse(int ctrl) parameter： ctrl：Control parameter Return value： Control parameter Description of control parameters： number package name Pop-up rules 1 Beginner's gift package Pop up if you haven't bought a novice gift bag when entering the game Homepage 2 Quick rush Pop up when user virtual currency is insufficient 3 Limited time gift package When entering the game homepage, if you have bought a novice gift bag, it will pop up 4 Clearance Award Pop up when passing the Checkpoint 5 VIP gift package Pop up when entering the level selection page 6 Today's deal Button trigger 7 Affordable package Button trigger 8 Shopping Mall Button trigger 3.6 Call payment Android PayNative.orderPay(id); orderPay(int id,String userdata); orderPay(int id,int price，String userdata); orderPay(int id, int price, int payType，String userdata); If you want to use WeChat payment, you need to put feedata_wx.xml in the assets directory. If you want Alipay, you need to put feedata_alipay.xml iOS [IOSLoader orderPay:id]; [IOSLoader orderPay:id userData:@\"userData\"]; [IOSLoader orderPay:id price:price userData:@\"userData\"]; [IOSLoader orderPay:id price:price type:payType userData:@\"userData\"]; //This method can be called directly. Payment callback is set by default. [IOSLoader textPayWithProductId:id callBack:^(NSDictionary *dic) { if ([dic[@\"reasonCode\"] integerValue] == 0) { //pay success } }]; Unity Wb.PayManager.Instance.OrderPay(int id, Action callFun); Wb.PayManager.Instance.OrderPay(int id, string userData, Action callFun); Wb.PayManager.Instance.OrderPay(int id, int price, string userData, Action callFun); Wb.PayManager.Instance.OrderPayWithType(int id, int price, int payType,string userData, Action callFun) example： Wb.PayManager.Instance.OrderPay(1, (result, id) => { if (result.Equals(\"Paysuccess\")) { ShowToast(\"pay success\", false); } else if (result.Equals(\"Payfail\")) { ShowToast(\"pay fail\", true); } else if (result.Equals(\"Paycancel\")) { ShowToast(\"cancel pay\", false); } }); parameter： id:Billing points defined in the gameid price:The price of the billing point, in minutes. payType:Payment type specified。eg:PayDef.PAY_TYPE_MM userdata:User defined data callFun:Payment callback（only Unity） 3.7 Repay props iOS [IOSLoader payConsumableGoodsRecoveryCallBack:^(NSDictionary * dic) { //Repay props //call finish method [IOSLoader payConsumableGoodsRecoveryFinish]; }]; 3.7 Need more game buttons Android PayNative.isMoreGame(); Unity Wb.PayManager.Instance.IsMoreGameBtn(); 3.8 Open more games Android PayNative.openMoreGame(); Unity Wb.PayManager.Instance.OpenMoreGame(); 3.9 Jump to an app details page in the store Android PayNative.openMarket(String package); iOS [IOSLoader jumpSomeApp:appid]; parameter： appid：Appid of jump APP Unity Wb.PayManager.Instance.OpenMarket(string package); parameter： package：The name of APP package in Android platform and app ID in IOS platform 3.10 Jump to the store details page of the current app Android PayNative.openAppraise(); iOS [IOSLoader openAppDetail]; Unity Wb.PayManager.Instance.OpenAppraise(); "},"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/4.-tong-ji-neng-li.html":{"url":"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/4.-tong-ji-neng-li.html","title":"4.Analysis","keywords":"","body":"4.Analysis 4.1 Custom statistics Android TJNative.event(String eventId); TJNative.event(String eventId, String label); TJNative.event(String eventId, HashMap attributes); iOS [IOSLoader tj_name:@\"eventId\"]; [IOSLoader tj_name:@\"eventId\" value:@\"label\"]; [IOSLoader tj_name:@\"eventId\" map:@\"attributes\"]; Unity Wb.TjManager.Instance.TJCustomEvent(string eventId); Wb.TjManager.Instance.TJCustomEvent(string eventId, string label); Wb.TjManager.Instance.TJCustomEvent(string eventId, Dictionary attributes); parameter： eventId: Event ID counted for the current label：Label properties for events attributes:Event multi label properties 4.2 Checkpoint statistics Android TJNative.startLevel(String level); TJNative.finishLevel(String level, String score); TJNative.failLevel(String level, String score); iOS [IOSLoader tj_startLevel:@\"level\"]; [IOSLoader tj_finishLevel:@\"level\"]; [IOSLoader tj_failLevel:@\"level\"]; Unity Wb.TjManager.Instance.StartLevel(string level); Wb.TjManager.Instance.FinishLevel(string level, string score); Wb.TjManager.Instance.FailLevel(string level, string score); parameter： level：Checkpoint name score：Checkpoint score，Transmitt nil 4.3 Recharge statistics 4.3.1 Statistics recharge succeeded Android TJNative.pay(double money, double coin, int source); iOS [IOSLoader tj_payWithMoney:money coin:coin source:source]; Unity Wb.TjManager.Instance.TJPay(double money,double coin, int source); parameter： money：Amount of money，dollar coin：Number of diamonds bought source：Recharge channel identification（use PayNative.getDefaultPayType get） 4.3.2 Add value and buy props Android TJNative.pay(double money, String item, int number, double price, int source); iOS [IOSLoader tj_payWithMoney:money productId:item number:number price:price score:score]; Unity Wb.TjManager.Instance.TJPayAndBuy(double money,string item,int number,double price, int source) parameter： money:Amount of money，dollar item:Item name bought number：Item number bought price：Item price bought source：Recharge channel identification（use PayNative.getDefaultPayType get） "},"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/5.-kuo-zhan-neng-li.html":{"url":"en/ke-hu-duan-jie-ru/ye-wu-jie-kou-1/5.-kuo-zhan-neng-li.html","title":"5.Extensions","keywords":"","body":"5.Extensions 5.1 Open activity page Android com.vigame.Activity.open(); iOS [IOSLoader openActivityPage]; Unity Wb.CoreManager.Instance.OpenActivityPage(); 5.2 Open notice page Android Notice.open(); iOS [IOSLoader openNoticePage]; Unity Wb.CoreManager.Instance.OpenActivityNotice(); 5.3 Submit rank data Android Rank.submit(level,score,usedCoins,leftCoins); iOS [IOSLoader submitRankInfoWithUserId:@\"userId\" level:level score:score usedCoins:usedCoins leftCoins:leftCoins]; Unity Wb.CoreManager.Instance.SumbitRankData(string userId, int level, int score, int usedCoins, int leftCoins); Parameters: userId：user identifier level：level identifier score：current score in level usedCoins：the coins of used leftCoins：the coins left 5.4 Open rank view Android Rank.open(); iOS [IOSLoader openRank]; Unity Wb.CoreManager.Instance.OpenRank(); 5.5 Open feedback page Android Feedback.open(); iOS [IOSLoader openGM]; Unity Wb.CoreManager.Instance.OpenFeedback(); 5.6 Open privacy policy page Android ProtocolUtil.openPrivacyPolicy(); iOS [IOSLoader openPrivacyPolicy]; Unity Wb.CoreManager.Instance.OpenPrivacyPolicy(); Note：The company name is associated with the CompanyIndex item of assets/VigameConfig.xml file. 5.7 Open user agreement Android CoreManagerNative.openUserAgreementByWeb(); iOS [IOSLoader openUserAgreement]; Unity Wb.CoreManager.Instance.OpenUserAgreementByWeb(); 5.8 Use CDKey 5.8.1 Is Support CDKey Android CDKey.isSupport(); iOS [IOSLoader isSupportExchangeCode]; Unity Wb.CoreManager.Instance.CDKeyIsSupport() 返回值： true：support CDKey false：not support CDKey 5.8.2 Use CDKey Android CDKey.use(String dhm); CDKey.use(String dhm,DhmCallback callback); Example： String dhm = \"111111\"; CDKey.use(dhm,new CDKey.DhmCallback() { @Override public void onFinish(CDKey.DhmData data) { // TODO Auto-generated method stub showToast(data.message); } }); Parameters: dhm：CDKey code callback：the callback of use result iOS //use CDKey [IOSLoader userExchangeCode:@“code”]; Parameters: code：the CDKey for use. Unity Wb.CoreManager.Instance.UseCDKey(string dhm) Parameters: dhm：the CDKey for use. 5.9 Local notification（Only iOS） iOS [IOSLoader pushLocalNotification:@“alertBody” fireDate:@“fireDate” noticeId:@”noticeId“]; //cancle single notification [IOSLoader cancelPushWithId:@”noticeId“]; //cancle all notification [IOSLoader cancelAllPush]; Parameters: alertBody：the content of notification fireDate：the date of notification fired,Accurate to second noticeId：the identifier of notification（for cancel notification） Unity Wb.CoreManager.Instance.NotifyNotification(int id, string body, long fireDate, int unitInterval,Dictionary userinfo); Parameters: id：the identifier of notification（for cancel notification） body：the content of notification fireDate：the date of notification fired,Accurate to second unitInterval：interval time for enum userinfo：custom info 5.10 Fast mark（Only iOS） iOS [IOSLoader fastmark] 5.11 Jump comment（Only iOS） iOS [IOSLoader jumpComment]; "}}